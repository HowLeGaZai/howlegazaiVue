import { openBlock as p, createElementBlock as C, createElementVNode as re, reactive as Tt, computed as F, unref as u, ref as W, watch as tt, toRef as Mt, onMounted as He, nextTick as dt, defineComponent as We, renderSlot as x, createCommentVNode as $, normalizeClass as ye, withKeys as de, createBlock as fe, withModifiers as Ze, normalizeStyle as Qe, normalizeProps as Pe, mergeProps as Te, Fragment as ce, createTextVNode as Ke, toDisplayString as Ce, renderList as De, createVNode as et, Transition as gt, withCtx as ie, onBeforeUpdate as Jn, onUnmounted as dn, withDirectives as _t, vShow as Nt, createSlots as Ye, isRef as ot, guardReactiveProps as Le, resolveDynamicComponent as Yn, useSlots as cn, getCurrentScope as Qn, onScopeDispose as ea, Teleport as ta } from "vue";
import { isBefore as fn, isEqual as Vn, isAfter as vn, set as Se, setHours as En, setMinutes as Fn, setSeconds as Ln, setMilliseconds as mn, parse as on, isValid as Rt, isDate as na, format as bt, getMonth as pe, getDay as aa, getYear as ke, getHours as je, getMinutes as Ge, getSeconds as yt, parseISO as ra, startOfWeek as pn, endOfWeek as la, setMonth as Ot, setYear as ut, addDays as mt, add as Un, addMonths as st, subMonths as Dt, getWeek as oa, getISOWeek as sa, differenceInCalendarDays as ia, eachDayOfInterval as kn, addYears as ua, subYears as da, sub as ca } from "date-fns";
function Lt() {
  return p(), C(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      re("path", {
        d: "M29.333 8c0-2.208-1.792-4-4-4h-18.667c-2.208 0-4 1.792-4 4v18.667c0 2.208 1.792 4 4 4h18.667c2.208 0 4-1.792 4-4v-18.667zM26.667 8v18.667c0 0.736-0.597 1.333-1.333 1.333 0 0-18.667 0-18.667 0-0.736 0-1.333-0.597-1.333-1.333 0 0 0-18.667 0-18.667 0-0.736 0.597-1.333 1.333-1.333 0 0 18.667 0 18.667 0 0.736 0 1.333 0.597 1.333 1.333z"
      }),
      re("path", {
        d: "M20 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      re("path", {
        d: "M9.333 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      re("path", {
        d: "M4 14.667h24c0.736 0 1.333-0.597 1.333-1.333s-0.597-1.333-1.333-1.333h-24c-0.736 0-1.333 0.597-1.333 1.333s0.597 1.333 1.333 1.333z"
      })
    ]
  );
}
function fa() {
  return p(), C(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      re("path", {
        d: "M23.057 7.057l-16 16c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l16-16c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0z"
      }),
      re("path", {
        d: "M7.057 8.943l16 16c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885l-16-16c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
function wn() {
  return p(), C(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      re("path", {
        d: "M20.943 23.057l-7.057-7.057c0 0 7.057-7.057 7.057-7.057 0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-8 8c-0.521 0.521-0.521 1.365 0 1.885l8 8c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
function bn() {
  return p(), C(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      re("path", {
        d: "M12.943 24.943l8-8c0.521-0.521 0.521-1.365 0-1.885l-8-8c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885l7.057 7.057c0 0-7.057 7.057-7.057 7.057-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0z"
      })
    ]
  );
}
function Hn() {
  return p(), C(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      re("path", {
        d: "M16 1.333c-8.095 0-14.667 6.572-14.667 14.667s6.572 14.667 14.667 14.667c8.095 0 14.667-6.572 14.667-14.667s-6.572-14.667-14.667-14.667zM16 4c6.623 0 12 5.377 12 12s-5.377 12-12 12c-6.623 0-12-5.377-12-12s5.377-12 12-12z"
      }),
      re("path", {
        d: "M14.667 8v8c0 0.505 0.285 0.967 0.737 1.193l5.333 2.667c0.658 0.329 1.46 0.062 1.789-0.596s0.062-1.46-0.596-1.789l-4.596-2.298c0 0 0-7.176 0-7.176 0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      })
    ]
  );
}
function Wn() {
  return p(), C(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      re("path", {
        d: "M24.943 19.057l-8-8c-0.521-0.521-1.365-0.521-1.885 0l-8 8c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l7.057-7.057c0 0 7.057 7.057 7.057 7.057 0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
function zn() {
  return p(), C(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      re("path", {
        d: "M7.057 12.943l8 8c0.521 0.521 1.365 0.521 1.885 0l8-8c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-7.057 7.057c0 0-7.057-7.057-7.057-7.057-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
const Dn = (e, n, a, t) => {
  const s = on(e, n.slice(0, e.length), /* @__PURE__ */ new Date());
  return Rt(s) && na(s) ? t ? s : Se(s, {
    hours: +a.hours,
    minutes: +(a == null ? void 0 : a.minutes),
    seconds: +(a == null ? void 0 : a.seconds),
    milliseconds: 0
  }) : null;
}, va = (e, n, a, t) => {
  const s = Array.isArray(a) ? a[0] : a;
  if (typeof n == "string")
    return Dn(e, n, s, t);
  if (Array.isArray(n)) {
    let c = null;
    for (const h of n)
      if (c = Dn(e, h, s, t), c)
        break;
    return c;
  }
  return typeof n == "function" ? n(e) : null;
}, b = (e) => e ? new Date(e) : /* @__PURE__ */ new Date(), ma = (e, n) => {
  if (n) {
    const t = (e.getMonth() + 1).toString().padStart(2, "0"), s = e.getDate().toString().padStart(2, "0"), c = e.getHours().toString().padStart(2, "0"), h = e.getMinutes().toString().padStart(2, "0");
    return `${e.getFullYear()}-${t}-${s}T${c}:${h}:00.000Z`;
  }
  const a = Date.UTC(
    e.getUTCFullYear(),
    e.getUTCMonth(),
    e.getUTCDate(),
    e.getUTCHours(),
    e.getUTCMinutes(),
    e.getUTCSeconds()
  );
  return new Date(a).toISOString();
}, Ue = (e) => {
  let n = b(JSON.parse(JSON.stringify(e)));
  return n = En(n, 0), n = Fn(n, 0), n = Ln(n, 0), n = mn(n, 0), n;
}, Ee = (e, n, a, t) => {
  let s = e ? b(e) : b();
  return (n || n === 0) && (s = En(s, +n)), (a || a === 0) && (s = Fn(s, +a)), (t || t === 0) && (s = Ln(s, +t)), mn(s, 0);
}, _e = (e, n) => !e || !n ? !1 : fn(Ue(e), Ue(n)), me = (e, n) => !e || !n ? !1 : Vn(Ue(e), Ue(n)), Be = (e, n) => !e || !n ? !1 : vn(Ue(e), Ue(n)), Kn = (e, n, a) => e && e[0] && e[1] ? Be(a, e[0]) && _e(a, e[1]) : e && e[0] && n ? Be(a, e[0]) && _e(a, n) || _e(a, e[0]) && Be(a, n) : !1, kt = (e) => {
  const n = Se(new Date(e), { date: 1 });
  return Ue(n);
}, wt = Tt({
  menuFocused: !1,
  shiftKeyInMenu: !1
}), xn = () => {
  const e = (t) => {
    wt.menuFocused = t;
  }, n = (t) => {
    wt.shiftKeyInMenu !== t && (wt.shiftKeyInMenu = t);
  };
  return {
    control: F(() => ({ shiftKeyInMenu: wt.shiftKeyInMenu, menuFocused: wt.menuFocused })),
    setMenuFocused: e,
    setShiftKey: n
  };
};
function yn(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Bt = {}, ya = {
  get exports() {
    return Bt;
  },
  set exports(e) {
    Bt = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t) {
    if (t === null || t === !0 || t === !1)
      return NaN;
    var s = Number(t);
    return isNaN(s) ? s : s < 0 ? Math.ceil(s) : Math.floor(s);
  }
  e.exports = n.default;
})(ya, Bt);
const ga = /* @__PURE__ */ yn(Bt);
var Yt = {}, ha = {
  get exports() {
    return Yt;
  },
  set exports(e) {
    Yt = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t) {
    var s = new Date(Date.UTC(t.getFullYear(), t.getMonth(), t.getDate(), t.getHours(), t.getMinutes(), t.getSeconds(), t.getMilliseconds()));
    return s.setUTCFullYear(t.getFullYear()), t.getTime() - s.getTime();
  }
  e.exports = n.default;
})(ha, Yt);
const $n = /* @__PURE__ */ yn(Yt);
function pa(e, n) {
  var a = Da(n);
  return a.formatToParts ? wa(a, e) : ba(a, e);
}
var ka = {
  year: 0,
  month: 1,
  day: 2,
  hour: 3,
  minute: 4,
  second: 5
};
function wa(e, n) {
  try {
    for (var a = e.formatToParts(n), t = [], s = 0; s < a.length; s++) {
      var c = ka[a[s].type];
      c >= 0 && (t[c] = parseInt(a[s].value, 10));
    }
    return t;
  } catch (h) {
    if (h instanceof RangeError)
      return [NaN];
    throw h;
  }
}
function ba(e, n) {
  var a = e.format(n).replace(/\u200E/g, ""), t = /(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(a);
  return [t[3], t[1], t[2], t[4], t[5], t[6]];
}
var Xt = {};
function Da(e) {
  if (!Xt[e]) {
    var n = new Intl.DateTimeFormat("en-US", {
      hour12: !1,
      timeZone: "America/New_York",
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    }).format(/* @__PURE__ */ new Date("2014-06-25T04:00:00.123Z")), a = n === "06/25/2014, 00:00:00" || n === "‎06‎/‎25‎/‎2014‎ ‎00‎:‎00‎:‎00";
    Xt[e] = a ? new Intl.DateTimeFormat("en-US", {
      hour12: !1,
      timeZone: e,
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    }) : new Intl.DateTimeFormat("en-US", {
      hourCycle: "h23",
      timeZone: e,
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
  }
  return Xt[e];
}
function gn(e, n, a, t, s, c, h) {
  var P = /* @__PURE__ */ new Date(0);
  return P.setUTCFullYear(e, n, a), P.setUTCHours(t, s, c, h), P;
}
var Mn = 36e5, $a = 6e4, qt = {
  timezone: /([Z+-].*)$/,
  timezoneZ: /^(Z)$/,
  timezoneHH: /^([+-]\d{2})$/,
  timezoneHHMM: /^([+-]\d{2}):?(\d{2})$/
};
function hn(e, n, a) {
  var t, s;
  if (!e || (t = qt.timezoneZ.exec(e), t))
    return 0;
  var c;
  if (t = qt.timezoneHH.exec(e), t)
    return c = parseInt(t[1], 10), Tn(c) ? -(c * Mn) : NaN;
  if (t = qt.timezoneHHMM.exec(e), t) {
    c = parseInt(t[1], 10);
    var h = parseInt(t[2], 10);
    return Tn(c, h) ? (s = Math.abs(c) * Mn + h * $a, c > 0 ? -s : s) : NaN;
  }
  if (Aa(e)) {
    n = new Date(n || Date.now());
    var P = a ? n : Ma(n), Y = sn(P, e), D = a ? Y : Ta(n, Y, e);
    return -D;
  }
  return NaN;
}
function Ma(e) {
  return gn(
    e.getFullYear(),
    e.getMonth(),
    e.getDate(),
    e.getHours(),
    e.getMinutes(),
    e.getSeconds(),
    e.getMilliseconds()
  );
}
function sn(e, n) {
  var a = pa(e, n), t = gn(
    a[0],
    a[1] - 1,
    a[2],
    a[3] % 24,
    a[4],
    a[5],
    0
  ).getTime(), s = e.getTime(), c = s % 1e3;
  return s -= c >= 0 ? c : 1e3 + c, t - s;
}
function Ta(e, n, a) {
  var t = e.getTime(), s = t - n, c = sn(new Date(s), a);
  if (n === c)
    return n;
  s -= c - n;
  var h = sn(new Date(s), a);
  return c === h ? c : Math.max(c, h);
}
function Tn(e, n) {
  return -23 <= e && e <= 23 && (n == null || 0 <= n && n <= 59);
}
var An = {};
function Aa(e) {
  if (An[e])
    return !0;
  try {
    return new Intl.DateTimeFormat(void 0, { timeZone: e }), An[e] = !0, !0;
  } catch {
    return !1;
  }
}
var Sa = /(Z|[+-]\d{2}(?::?\d{2})?| UTC| [a-zA-Z]+\/[a-zA-Z_]+(?:\/[a-zA-Z_]+)?)$/;
const jn = Sa;
var Jt = 36e5, Sn = 6e4, Ca = 2, Ie = {
  dateTimePattern: /^([0-9W+-]+)(T| )(.*)/,
  datePattern: /^([0-9W+-]+)(.*)/,
  plainTime: /:/,
  // year tokens
  YY: /^(\d{2})$/,
  YYY: [
    /^([+-]\d{2})$/,
    // 0 additional digits
    /^([+-]\d{3})$/,
    // 1 additional digit
    /^([+-]\d{4})$/
    // 2 additional digits
  ],
  YYYY: /^(\d{4})/,
  YYYYY: [
    /^([+-]\d{4})/,
    // 0 additional digits
    /^([+-]\d{5})/,
    // 1 additional digit
    /^([+-]\d{6})/
    // 2 additional digits
  ],
  // date tokens
  MM: /^-(\d{2})$/,
  DDD: /^-?(\d{3})$/,
  MMDD: /^-?(\d{2})-?(\d{2})$/,
  Www: /^-?W(\d{2})$/,
  WwwD: /^-?W(\d{2})-?(\d{1})$/,
  HH: /^(\d{2}([.,]\d*)?)$/,
  HHMM: /^(\d{2}):?(\d{2}([.,]\d*)?)$/,
  HHMMSS: /^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,
  // time zone tokens (to identify the presence of a tz)
  timeZone: jn
};
function un(e, n) {
  if (arguments.length < 1)
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  if (e === null)
    return /* @__PURE__ */ new Date(NaN);
  var a = n || {}, t = a.additionalDigits == null ? Ca : ga(a.additionalDigits);
  if (t !== 2 && t !== 1 && t !== 0)
    throw new RangeError("additionalDigits must be 0, 1 or 2");
  if (e instanceof Date || typeof e == "object" && Object.prototype.toString.call(e) === "[object Date]")
    return new Date(e.getTime());
  if (typeof e == "number" || Object.prototype.toString.call(e) === "[object Number]")
    return new Date(e);
  if (!(typeof e == "string" || Object.prototype.toString.call(e) === "[object String]"))
    return /* @__PURE__ */ new Date(NaN);
  var s = Pa(e), c = _a(s.date, t), h = c.year, P = c.restDateString, Y = Na(P, h);
  if (isNaN(Y))
    return /* @__PURE__ */ new Date(NaN);
  if (Y) {
    var D = Y.getTime(), L = 0, M;
    if (s.time && (L = Ra(s.time), isNaN(L)))
      return /* @__PURE__ */ new Date(NaN);
    if (s.timeZone || a.timeZone) {
      if (M = hn(s.timeZone || a.timeZone, new Date(D + L)), isNaN(M))
        return /* @__PURE__ */ new Date(NaN);
    } else
      M = $n(new Date(D + L)), M = $n(new Date(D + L + M));
    return new Date(D + L + M);
  } else
    return /* @__PURE__ */ new Date(NaN);
}
function Pa(e) {
  var n = {}, a = Ie.dateTimePattern.exec(e), t;
  if (a ? (n.date = a[1], t = a[3]) : (a = Ie.datePattern.exec(e), a ? (n.date = a[1], t = a[2]) : (n.date = null, t = e)), t) {
    var s = Ie.timeZone.exec(t);
    s ? (n.time = t.replace(s[1], ""), n.timeZone = s[1].trim()) : n.time = t;
  }
  return n;
}
function _a(e, n) {
  var a = Ie.YYY[n], t = Ie.YYYYY[n], s;
  if (s = Ie.YYYY.exec(e) || t.exec(e), s) {
    var c = s[1];
    return {
      year: parseInt(c, 10),
      restDateString: e.slice(c.length)
    };
  }
  if (s = Ie.YY.exec(e) || a.exec(e), s) {
    var h = s[1];
    return {
      year: parseInt(h, 10) * 100,
      restDateString: e.slice(h.length)
    };
  }
  return {
    year: null
  };
}
function Na(e, n) {
  if (n === null)
    return null;
  var a, t, s, c;
  if (e.length === 0)
    return t = /* @__PURE__ */ new Date(0), t.setUTCFullYear(n), t;
  if (a = Ie.MM.exec(e), a)
    return t = /* @__PURE__ */ new Date(0), s = parseInt(a[1], 10) - 1, Pn(n, s) ? (t.setUTCFullYear(n, s), t) : /* @__PURE__ */ new Date(NaN);
  if (a = Ie.DDD.exec(e), a) {
    t = /* @__PURE__ */ new Date(0);
    var h = parseInt(a[1], 10);
    return Ba(n, h) ? (t.setUTCFullYear(n, 0, h), t) : /* @__PURE__ */ new Date(NaN);
  }
  if (a = Ie.MMDD.exec(e), a) {
    t = /* @__PURE__ */ new Date(0), s = parseInt(a[1], 10) - 1;
    var P = parseInt(a[2], 10);
    return Pn(n, s, P) ? (t.setUTCFullYear(n, s, P), t) : /* @__PURE__ */ new Date(NaN);
  }
  if (a = Ie.Www.exec(e), a)
    return c = parseInt(a[1], 10) - 1, _n(n, c) ? Cn(n, c) : /* @__PURE__ */ new Date(NaN);
  if (a = Ie.WwwD.exec(e), a) {
    c = parseInt(a[1], 10) - 1;
    var Y = parseInt(a[2], 10) - 1;
    return _n(n, c, Y) ? Cn(n, c, Y) : /* @__PURE__ */ new Date(NaN);
  }
  return null;
}
function Ra(e) {
  var n, a, t;
  if (n = Ie.HH.exec(e), n)
    return a = parseFloat(n[1].replace(",", ".")), Qt(a) ? a % 24 * Jt : NaN;
  if (n = Ie.HHMM.exec(e), n)
    return a = parseInt(n[1], 10), t = parseFloat(n[2].replace(",", ".")), Qt(a, t) ? a % 24 * Jt + t * Sn : NaN;
  if (n = Ie.HHMMSS.exec(e), n) {
    a = parseInt(n[1], 10), t = parseInt(n[2], 10);
    var s = parseFloat(n[3].replace(",", "."));
    return Qt(a, t, s) ? a % 24 * Jt + t * Sn + s * 1e3 : NaN;
  }
  return null;
}
function Cn(e, n, a) {
  n = n || 0, a = a || 0;
  var t = /* @__PURE__ */ new Date(0);
  t.setUTCFullYear(e, 0, 4);
  var s = t.getUTCDay() || 7, c = n * 7 + a + 1 - s;
  return t.setUTCDate(t.getUTCDate() + c), t;
}
var Oa = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], Ia = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
function Gn(e) {
  return e % 400 === 0 || e % 4 === 0 && e % 100 !== 0;
}
function Pn(e, n, a) {
  if (n < 0 || n > 11)
    return !1;
  if (a != null) {
    if (a < 1)
      return !1;
    var t = Gn(e);
    if (t && a > Ia[n] || !t && a > Oa[n])
      return !1;
  }
  return !0;
}
function Ba(e, n) {
  if (n < 1)
    return !1;
  var a = Gn(e);
  return !(a && n > 366 || !a && n > 365);
}
function _n(e, n, a) {
  return !(n < 0 || n > 52 || a != null && (a < 0 || a > 6));
}
function Qt(e, n, a) {
  return !(e != null && (e < 0 || e >= 25) || n != null && (n < 0 || n >= 60) || a != null && (a < 0 || a >= 60));
}
var Vt = {}, Ya = {
  get exports() {
    return Vt;
  },
  set exports(e) {
    Vt = e;
  }
}, Et = {}, Va = {
  get exports() {
    return Et;
  },
  set exports(e) {
    Et = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t, s) {
    if (t == null)
      throw new TypeError("assign requires that input parameter not be null or undefined");
    for (var c in s)
      Object.prototype.hasOwnProperty.call(s, c) && (t[c] = s[c]);
    return t;
  }
  e.exports = n.default;
})(Va, Et);
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = s;
  var a = t(Et);
  function t(c) {
    return c && c.__esModule ? c : { default: c };
  }
  function s(c) {
    return (0, a.default)({}, c);
  }
  e.exports = n.default;
})(Ya, Vt);
const Ea = /* @__PURE__ */ yn(Vt);
function Fa(e, n, a) {
  var t = un(e, a), s = hn(n, t, !0), c = new Date(t.getTime() - s), h = /* @__PURE__ */ new Date(0);
  return h.setFullYear(c.getUTCFullYear(), c.getUTCMonth(), c.getUTCDate()), h.setHours(c.getUTCHours(), c.getUTCMinutes(), c.getUTCSeconds(), c.getUTCMilliseconds()), h;
}
function La(e, n, a) {
  if (typeof e == "string" && !e.match(jn)) {
    var t = Ea(a);
    return t.timeZone = n, un(e, t);
  }
  var s = un(e, a), c = gn(
    s.getFullYear(),
    s.getMonth(),
    s.getDate(),
    s.getHours(),
    s.getMinutes(),
    s.getSeconds(),
    s.getMilliseconds()
  ).getTime(), h = hn(n, new Date(c));
  return new Date(c + h);
}
const Ua = (e, n = 3) => {
  const a = [];
  for (let t = 0; t < e.length; t += n)
    a.push([e[t], e[t + 1], e[t + 2]]);
  return a;
}, Ha = (e, n) => {
  const a = [1, 2, 3, 4, 5, 6, 7].map((c) => new Intl.DateTimeFormat(e, { weekday: "short", timeZone: "UTC" }).format(/* @__PURE__ */ new Date(`2017-01-0${c}T00:00:00+00:00`)).slice(0, 2)), t = a.slice(0, n), s = a.slice(n + 1, a.length);
  return [a[n]].concat(...s).concat(...t);
}, Wa = (e, n) => {
  const a = [];
  for (let t = +e[0]; t <= +e[1]; t++)
    a.push({ value: +t, text: `${t}` });
  return n ? a.reverse() : a;
}, za = (e, n) => {
  const a = new Intl.DateTimeFormat(e, { month: n, timeZone: "UTC" });
  return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((s) => {
    const c = s < 10 ? `0${s}` : s;
    return /* @__PURE__ */ new Date(`2017-${c}-01T00:00:00+00:00`);
  }).map((s, c) => ({
    text: a.format(s),
    value: c
  }));
}, Ka = (e) => [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][e], $e = (e) => {
  const n = u(e);
  return n != null && n.$el ? n == null ? void 0 : n.$el : n;
}, xa = (e) => Object.assign({ type: "dot" }, e), Zn = (e) => Array.isArray(e) ? !!e[0] && !!e[1] : !1, Ft = {
  prop: (e) => `"${e}" prop must be enabled!`,
  dateArr: (e) => `You need to use array as "model-value" binding in order to support "${e}"`
}, Me = (e) => e, Nn = (e) => e === 0 ? e : !e || isNaN(+e) ? null : +e, Rn = (e) => Object.assign(
  {
    menuAppear: "dp-menu-appear",
    open: "dp-slide-down",
    close: "dp-slide-up",
    next: "calendar-next",
    previous: "calendar-prev",
    vNext: "dp-slide-up",
    vPrevious: "dp-slide-down"
  },
  e
), ja = (e) => Object.assign(
  {
    toggleOverlay: "Toggle overlay",
    menu: "Datepicker menu",
    input: "Datepicker input",
    calendarWrap: "Calendar wrapper",
    calendarDays: "Calendar days",
    openTimePicker: "Open time picker",
    closeTimePicker: "Close time Picker",
    incrementValue: (n) => `Increment ${n}`,
    decrementValue: (n) => `Decrement ${n}`,
    openTpOverlay: (n) => `Open ${n} overlay`,
    amPmButton: "Switch AM/PM mode",
    openYearsOverlay: "Open years overlay",
    openMonthsOverlay: "Open months overlay",
    nextMonth: "Next month",
    prevMonth: "Previous month",
    day: () => ""
  },
  e
), Ga = (e) => e === null ? 0 : typeof e == "boolean" ? e ? 2 : 0 : +e >= 2 ? +e : 2, Za = (e, n, a) => e || (typeof a == "string" ? a : n), Xa = (e) => typeof e == "boolean" ? e ? Rn({}) : !1 : Rn(e), qa = () => ({
  enterSubmit: !0,
  tabSubmit: !0,
  openMenu: !0,
  rangeSeparator: " - "
}), Ja = (e) => Object.assign({ months: [], years: [], times: { hours: [], minutes: [], seconds: [] } }, e), Ve = (e) => {
  const n = () => {
    if (e.partialRange)
      return null;
    throw new Error(Ft.prop("partial-range"));
  }, a = F(() => ({
    ariaLabels: ja(e.ariaLabels),
    textInputOptions: Object.assign(qa(), e.textInputOptions),
    multiCalendars: Ga(e.multiCalendars),
    previewFormat: Za(e.previewFormat, e.format, c()),
    filters: Ja(e.filters),
    transitions: Xa(e.transitions),
    startTime: m()
  })), t = (o) => {
    if (e.range)
      return o();
    throw new Error(Ft.prop("range"));
  }, s = () => {
    const o = e.enableSeconds ? ":ss" : "";
    return e.is24 ? `HH:mm${o}` : `hh:mm${o} aa`;
  }, c = () => e.format ? e.format : e.monthPicker ? "MM/yyyy" : e.timePicker ? s() : e.weekPicker ? "MM/dd/yyyy" : e.yearPicker ? "yyyy" : e.enableTimePicker ? `MM/dd/yyyy, ${s()}` : "MM/dd/yyyy", h = (o, r) => {
    if (typeof e.format == "function")
      return e.format(o);
    const d = r || c(), A = e.formatLocale ? { locale: e.formatLocale } : void 0;
    return Array.isArray(o) ? `${bt(o[0], d, A)} ${e.modelAuto && !o[1] ? "" : a.value.textInputOptions.rangeSeparator || "-"} ${o[1] ? bt(o[1], d, A) : ""}` : bt(o, d, A);
  }, P = (o) => e.timezone ? Fa(o, e.timezone) : o, Y = (o) => e.timezone ? La(o, e.timezone) : o, D = F(() => (o) => {
    var r;
    return (r = e.hideNavigation) == null ? void 0 : r.includes(o);
  }), L = (o) => {
    const r = e.maxDate ? Be(P(o), P(b(e.maxDate))) : !1, d = e.minDate ? _e(P(o), P(b(e.minDate))) : !1, A = O(o, e.disabledDates), R = a.value.filters.months.map((ne) => +ne).includes(pe(o)), g = e.disabledWeekDays.length ? e.disabledWeekDays.some((ne) => +ne === aa(o)) : !1, k = e.allowedDates.length ? !e.allowedDates.some((ne) => me(P(b(ne)), P(o))) : !1, y = ke(o), j = y < +e.yearRange[0] || y > +e.yearRange[1];
    return !(r || d || A || R || j || g || k);
  }, M = (o) => {
    const r = {
      hours: je(b()),
      minutes: Ge(b()),
      seconds: e.enableSeconds ? yt(b()) : 0
    };
    return Object.assign(r, o);
  }, m = () => e.range ? e.startTime && Array.isArray(e.startTime) ? [M(e.startTime[0]), M(e.startTime[1])] : null : e.startTime && !Array.isArray(e.startTime) ? M(e.startTime) : null, T = (o) => !L(o), Q = (o) => Array.isArray(o) ? Rt(o[0]) && (o[1] ? Rt(o[1]) : !0) : o ? Rt(o) : !1, X = (o) => o instanceof Date ? o : ra(o), z = (o) => {
    const r = pn(P(o), { weekStartsOn: +e.weekStart }), d = la(P(o), { weekStartsOn: +e.weekStart });
    return [r, d];
  }, O = (o, r) => Array.isArray(r) ? r.some((d) => me(P(b(d)), P(o))) : r(o), I = (o, r, d) => {
    let A = o ? b(o) : b();
    return (r || r === 0) && (A = Ot(A, r)), d && (A = ut(A, d)), A;
  }, V = (o) => Se(b(), { hours: je(o), minutes: Ge(o), seconds: yt(o) }), J = (o) => Se(b(), {
    hours: +o.hours || 0,
    minutes: +o.minutes || 0,
    seconds: +o.seconds || 0
  }), G = (o, r, d, A) => {
    if (!o)
      return !0;
    if (A) {
      const H = d === "max" ? fn(o, r) : vn(o, r), R = { seconds: 0, milliseconds: 0 };
      return H || Vn(Se(o, R), Se(r, R));
    }
    return d === "max" ? o.getTime() <= r.getTime() : o.getTime() >= r.getTime();
  }, te = () => !e.enableTimePicker || e.monthPicker || e.yearPicker || e.ignoreTimeValidation, se = (o) => Array.isArray(o) ? [o[0] ? V(o[0]) : null, o[1] ? V(o[1]) : null] : V(o), S = (o) => {
    const r = e.maxTime ? J(e.maxTime) : b(e.maxDate);
    return Array.isArray(o) ? G(o[0], r, "max", !!e.maxDate) && G(o[1], r, "max", !!e.maxDate) : G(o, r, "max", !!e.maxDate);
  }, E = (o, r) => {
    const d = e.minTime ? J(e.minTime) : b(e.minDate);
    return Array.isArray(o) ? G(o[0], d, "min", !!e.minDate) && G(o[1], d, "min", !!e.minDate) && r : G(o, d, "min", !!e.minDate) && r;
  }, U = (o) => {
    let r = !0;
    if (!o || te())
      return !0;
    const d = !e.minDate && !e.maxDate ? se(o) : o;
    return (e.maxTime || e.maxDate) && (r = S(Me(d))), (e.minTime || e.minDate) && (r = E(Me(d), r)), r;
  }, f = (o, r) => {
    const d = b(JSON.parse(JSON.stringify(o))), A = [];
    for (let H = 0; H < 7; H++) {
      const R = mt(d, H), g = pe(R) !== r;
      A.push({
        text: e.hideOffsetDates && g ? "" : R.getDate(),
        value: R,
        current: !g,
        classData: {}
      });
    }
    return A;
  }, _ = (o, r) => {
    const d = [], A = b(P(new Date(r, o))), H = b(P(new Date(r, o + 1, 0))), R = pn(A, { weekStartsOn: e.weekStart }), g = (k) => {
      const y = f(k, o);
      if (d.push({ days: y }), !d[d.length - 1].days.some(
        (j) => me(Ue(j.value), Ue(H))
      )) {
        const j = mt(k, 7);
        g(j);
      }
    };
    if (g(R), e.sixWeeks && d.length < 6) {
      const k = 6 - d.length;
      for (let y = 1; y <= k; y++) {
        const j = d[d.length - 1], ne = j.days[j.days.length - 1], Ne = f(mt(ne.value, 1), pe(A));
        d.push({ days: Ne });
      }
    }
    return d;
  }, K = (o, r, d) => [Se(b(o), { date: 1 }), Se(b(), { month: r, year: d, date: 1 })], oe = (o, r) => _e(...K(e.minDate, o, r)) || me(...K(e.minDate, o, r)), ee = (o, r) => Be(...K(e.maxDate, o, r)) || me(...K(e.maxDate, o, r)), N = (o, r, d) => {
    let A = !1;
    return e.maxDate && d && ee(o, r) && (A = !0), e.minDate && !d && oe(o, r) && (A = !0), A;
  };
  return {
    checkPartialRangeValue: n,
    checkRangeEnabled: t,
    getZonedDate: P,
    getZonedToUtc: Y,
    formatDate: h,
    getDefaultPattern: c,
    validateDate: L,
    getDefaultStartTime: m,
    isDisabled: T,
    isValidDate: Q,
    sanitizeDate: X,
    getWeekFromDate: z,
    matchDate: O,
    setDateMonthOrYear: I,
    isValidTime: U,
    getCalendarDays: _,
    validateMonthYearInRange: (o, r, d, A) => {
      let H = !1;
      return A ? e.minDate && e.maxDate ? H = N(o, r, d) : (e.minDate && oe(o, r) || e.maxDate && ee(o, r)) && (H = !0) : H = !0, H;
    },
    validateMaxDate: ee,
    validateMinDate: oe,
    assignDefaultTime: M,
    defaults: a,
    hideNavigationButtons: D
  };
}, he = Tt({
  monthYear: [],
  calendar: [],
  time: [],
  actionRow: [],
  selectionGrid: [],
  timePicker: {
    0: [],
    1: []
  },
  monthPicker: []
}), en = W(null), Pt = W(!1), tn = W(!1), nn = W(!1), an = W(!1), Oe = W(0), Ae = W(0), nt = () => {
  const e = F(() => Pt.value ? [...he.selectionGrid, he.actionRow].filter((O) => O.length) : tn.value ? [
    ...he.timePicker[0],
    ...he.timePicker[1],
    an.value ? [] : [en.value],
    he.actionRow
  ].filter((O) => O.length) : nn.value ? [...he.monthPicker, he.actionRow] : [he.monthYear, ...he.calendar, he.time, he.actionRow].filter((O) => O.length)), n = (O) => {
    Oe.value = O ? Oe.value + 1 : Oe.value - 1;
    let I = null;
    e.value[Ae.value] && (I = e.value[Ae.value][Oe.value]), I || (Oe.value = O ? Oe.value - 1 : Oe.value + 1);
  }, a = (O) => {
    if (Ae.value === 0 && !O || Ae.value === e.value.length && O)
      return;
    Ae.value = O ? Ae.value + 1 : Ae.value - 1, e.value[Ae.value] ? e.value[Ae.value] && !e.value[Ae.value][Oe.value] && Oe.value !== 0 && (Oe.value = e.value[Ae.value].length - 1) : Ae.value = O ? Ae.value - 1 : Ae.value + 1;
  }, t = (O) => {
    let I = null;
    e.value[Ae.value] && (I = e.value[Ae.value][Oe.value]), I ? I.focus({ preventScroll: !Pt.value }) : Oe.value = O ? Oe.value - 1 : Oe.value + 1;
  }, s = () => {
    n(!0), t(!0);
  }, c = () => {
    n(!1), t(!1);
  }, h = () => {
    a(!1), t(!0);
  }, P = () => {
    a(!0), t(!0);
  }, Y = (O, I) => {
    he[I] = O;
  }, D = (O, I) => {
    he[I] = O;
  }, L = () => {
    Oe.value = 0, Ae.value = 0;
  };
  return {
    buildMatrix: Y,
    buildMultiLevelMatrix: D,
    setTimePickerBackRef: (O) => {
      en.value = O;
    },
    setSelectionGrid: (O) => {
      Pt.value = O, L(), O || (he.selectionGrid = []);
    },
    setTimePicker: (O, I = !1) => {
      tn.value = O, an.value = I, L(), O || (he.timePicker[0] = [], he.timePicker[1] = []);
    },
    setTimePickerElements: (O, I = 0) => {
      he.timePicker[I] = O;
    },
    arrowRight: s,
    arrowLeft: c,
    arrowUp: h,
    arrowDown: P,
    clearArrowNav: () => {
      he.monthYear = [], he.calendar = [], he.time = [], he.actionRow = [], he.selectionGrid = [], he.timePicker[0] = [], he.timePicker[1] = [], Pt.value = !1, tn.value = !1, an.value = !1, nn.value = !1, L(), en.value = null;
    },
    setMonthPicker: (O) => {
      nn.value = O, L();
    },
    refSets: he
    // exposed for testing
  };
}, On = (e) => Array.isArray(e), lt = (e) => Array.isArray(e), In = (e) => Array.isArray(e) && e.length === 2, Qa = (e, n, a, t, s) => {
  const {
    getDefaultStartTime: c,
    isDisabled: h,
    sanitizeDate: P,
    getWeekFromDate: Y,
    setDateMonthOrYear: D,
    validateMonthYearInRange: L,
    defaults: M
  } = Ve(e), m = F({
    get: () => e.internalModelValue,
    set: (i) => {
      !e.readonly && !e.disabled && n("update:internal-model-value", i);
    }
  }), T = W([]);
  tt(m, () => {
    te();
  });
  const Q = Mt(e, "multiCalendars");
  tt(Q, () => {
    ve(0);
  });
  const X = W([{ month: pe(b()), year: ke(b()) }]), z = Tt({
    hours: e.range ? [je(b()), je(b())] : je(b()),
    minutes: e.range ? [Ge(b()), Ge(b())] : Ge(b()),
    seconds: e.range ? [0, 0] : 0
  }), O = F(
    () => (i) => X.value[i] ? X.value[i].month : 0
  ), I = F(
    () => (i) => X.value[i] ? X.value[i].year : 0
  ), V = F(() => e.flow && e.flow.length && !e.partialFlow ? s.value === e.flow.length : !0), J = (i, w, q) => {
    var v, B;
    X.value[i] || (X.value[i] = { month: 0, year: 0 }), X.value[i].month = w === null ? (v = X.value[i]) == null ? void 0 : v.month : w, X.value[i].year = q === null ? (B = X.value[i]) == null ? void 0 : B.year : q;
  }, G = (i, w) => {
    z[i] = w;
  };
  He(() => {
    m.value || (e.startDate && (J(0, pe(b(e.startDate)), ke(b(e.startDate))), M.value.multiCalendars && ve(0)), M.value.startTime && N()), te(!0);
  });
  const te = (i = !1) => {
    if (m.value)
      return Array.isArray(m.value) ? (T.value = m.value, f(i)) : S(m.value);
    if (e.timePicker)
      return _();
    if (e.monthPicker && !e.range)
      return K();
    if (e.yearPicker && !e.range)
      return oe();
    if (M.value.multiCalendars && i && !e.startDate)
      return se(b(), i);
  }, se = (i, w = !1) => {
    if ((!M.value.multiCalendars || !e.multiStatic || w) && J(0, pe(i), ke(i)), M.value.multiCalendars)
      for (let q = 1; q < M.value.multiCalendars; q++) {
        const v = Se(b(), { month: O.value(q - 1), year: I.value(q - 1) }), B = Un(v, { months: 1 });
        X.value[q] = { month: pe(B), year: ke(B) };
      }
  }, S = (i) => {
    se(i), G("hours", je(i)), G("minutes", Ge(i)), G("seconds", yt(i));
  }, E = (i, w) => {
    se(i[0], w);
    const q = (v, B) => [
      v(i[0]),
      i[1] ? v(i[1]) : z[B][1]
    ];
    G("hours", q(je, "hours")), G("minutes", q(Ge, "minutes")), G("seconds", q(yt, "seconds"));
  }, U = (i, w) => {
    if ((e.range || e.weekPicker) && !e.multiDates)
      return E(i, w);
    if (e.multiDates) {
      const q = i[i.length - 1];
      return S(q);
    }
  }, f = (i) => {
    const w = m.value;
    U(w, i), M.value.multiCalendars && e.multiCalendarsSolo && o();
  }, _ = () => {
    if (N(), !e.range)
      m.value = Ee(b(), z.hours, z.minutes, ee());
    else {
      const i = z.hours, w = z.minutes;
      m.value = [
        Ee(b(), i[0], w[0], ee()),
        Ee(b(), i[1], w[1], ee(!1))
      ];
    }
  }, K = () => {
    e.multiDates ? m.value = [D(b(), O.value(0), I.value(0))] : m.value = D(b(), O.value(0), I.value(0));
  }, oe = () => {
    m.value = b();
  }, ee = (i = !0) => e.enableSeconds ? Array.isArray(z.seconds) ? i ? z.seconds[0] : z.seconds[1] : z.seconds : 0, N = () => {
    const i = c();
    if (i) {
      const w = Array.isArray(i), q = w ? [+i[0].hours, +i[1].hours] : +i.hours, v = w ? [+i[0].minutes, +i[1].minutes] : +i.minutes, B = w ? [+i[0].seconds, +i[1].seconds] : +i.seconds;
      G("hours", q), G("minutes", v), e.enableSeconds && G("seconds", B);
    }
  }, l = () => Array.isArray(m.value) && m.value.length ? m.value[m.value.length - 1] : null, o = () => {
    if (Array.isArray(m.value) && m.value.length === 2) {
      const i = b(
        b(m.value[1] ? m.value[1] : st(m.value[0], 1))
      ), [w, q] = [pe(m.value[0]), ke(m.value[0])], [v, B] = [pe(m.value[1]), ke(m.value[1])];
      (w !== v || w === v && q !== B) && e.multiCalendarsSolo && J(1, pe(i), ke(i));
    }
  }, r = (i) => {
    const w = st(i, 1);
    return { month: pe(w), year: ke(w) };
  }, d = (i) => {
    const w = pe(b(i)), q = ke(b(i));
    if (J(0, w, q), M.value.multiCalendars > 0)
      for (let v = 1; v < M.value.multiCalendars; v++) {
        const B = r(
          Se(b(i), { year: O.value(v - 1), month: I.value(v - 1) })
        );
        J(v, B.month, B.year);
      }
  }, A = (i) => {
    if (m.value && Array.isArray(m.value))
      if (m.value.some((w) => me(i, w))) {
        const w = m.value.filter((q) => !me(q, i));
        m.value = w.length ? w : null;
      } else
        (e.multiDatesLimit && +e.multiDatesLimit > m.value.length || !e.multiDatesLimit) && m.value.push(i);
    else
      m.value = [i];
  }, H = (i, w) => {
    const q = Be(i, w) ? w : i, v = Be(w, i) ? w : i;
    return kn({ start: q, end: v });
  }, R = (i, w = 0) => {
    if (Array.isArray(m.value) && m.value[w]) {
      const q = ia(i, m.value[w]), v = H(m.value[w], i), B = v.length === 1 ? 0 : v.filter((be) => h(be)).length, we = Math.abs(q) - B;
      if (e.minRange && e.maxRange)
        return we >= +e.minRange && we <= +e.maxRange;
      if (e.minRange)
        return we >= +e.minRange;
      if (e.maxRange)
        return we <= +e.maxRange;
    }
    return !0;
  }, g = (i) => Array.isArray(m.value) && m.value.length === 2 ? e.fixedStart && (Be(i, m.value[0]) || me(i, m.value[0])) ? [m.value[0], i] : e.fixedEnd && (_e(i, m.value[1]) || me(i, m.value[1])) ? [i, m.value[1]] : (n("invalid-fixed-range", i), m.value) : [], k = () => {
    e.autoApply && V.value && n("auto-apply", e.partialFlow);
  }, y = () => {
    e.autoApply && n("select-date");
  }, j = (i) => !kn({ start: i[0], end: i[1] }).some((q) => h(q)), ne = (i) => (m.value = Y(b(i.value)), k()), Ne = (i) => {
    const w = Ee(b(i.value), z.hours, z.minutes, ee());
    e.multiDates ? A(w) : m.value = w, a(), k();
  }, Xe = () => {
    T.value = m.value ? m.value.slice() : [], T.value.length === 2 && !(e.fixedStart || e.fixedEnd) && (T.value = []);
  }, le = (i, w) => {
    const q = [b(i.value), mt(b(i.value), +e.autoRange)];
    j(q) && (w && d(i.value), T.value = q);
  }, qe = (i) => {
    ze(i.value) || !R(i.value, e.fixedStart ? 0 : 1) || (T.value = g(b(i.value)));
  }, ze = (i) => e.noDisabledRange ? H(T.value[0], i).some((q) => h(q)) : !1, Re = (i, w) => {
    if (Xe(), e.autoRange)
      return le(i, w);
    if (e.fixedStart || e.fixedEnd)
      return qe(i);
    T.value[0] ? R(b(i.value)) && !ze(i.value) && (_e(b(i.value), b(T.value[0])) ? T.value.unshift(b(i.value)) : T.value[1] = b(i.value)) : T.value[0] = b(i.value);
  }, rt = (i) => {
    T.value[i] = Ee(
      T.value[i],
      z.hours[i],
      z.minutes[i],
      ee(i !== 1)
    );
  }, ht = () => {
    T.value.length && (T.value[0] && !T.value[1] ? rt(0) : (rt(0), rt(1), a()), m.value = T.value.slice(), T.value[0] && T.value[1] && e.autoApply && n("auto-apply"), T.value[0] && !T.value[1] && e.modelAuto && e.autoApply && n("auto-apply"));
  }, ae = (i, w = !1) => {
    if (!(h(i.value) || !i.current && e.hideOffsetDates)) {
      if (e.weekPicker)
        return ne(i);
      if (!e.range)
        return Ne(i);
      lt(z.hours) && lt(z.minutes) && !e.multiDates && (Re(i, w), ht());
    }
  }, ge = (i) => {
    const w = i[0];
    return e.weekNumbers === "local" ? oa(w.value, { weekStartsOn: +e.weekStart }) : e.weekNumbers === "iso" ? sa(w.value) : typeof e.weekNumbers == "function" ? e.weekNumbers(w.value) : "";
  }, ve = (i) => {
    for (let w = i - 1; w >= 0; w--) {
      const q = Dt(Se(b(), { month: O.value(w + 1), year: I.value(w + 1) }), 1);
      J(w, pe(q), ke(q));
    }
    for (let w = i + 1; w <= M.value.multiCalendars - 1; w++) {
      const q = st(Se(b(), { month: O.value(w - 1), year: I.value(w - 1) }), 1);
      J(w, pe(q), ke(q));
    }
  }, Fe = (i) => D(b(), O.value(i), I.value(i)), Je = (i) => Ee(i, z.hours, z.minutes, ee()), Ht = (i) => {
    A(Fe(i));
  }, Wt = (i, w) => {
    const q = e.monthPicker ? O.value(i) !== w.month || !w.fromNav : I.value(i) !== w.year;
    if (J(i, w.month, w.year), M.value.multiCalendars && !e.multiCalendarsSolo && ve(i), e.monthPicker || e.yearPicker)
      if (e.multiDates)
        q && Ht(i);
      else if (e.range) {
        if (q) {
          let v = m.value ? m.value.slice() : [];
          v.length === 2 && v[1] !== null && (v = []), v.length ? _e(Fe(i), v[0]) ? v.unshift(Fe(i)) : v[1] = Fe(i) : v = [Fe(i)], m.value = v;
        }
      } else
        m.value = Fe(i);
    n("update-month-year", { instance: i, month: w.month, year: w.year }), t(e.multiCalendarsSolo ? i : void 0);
  }, zt = async (i = !1) => {
    if (e.autoApply && (e.monthPicker || e.yearPicker)) {
      await dt();
      const w = e.monthPicker ? i : !1;
      e.range ? n("auto-apply", w || !m.value || m.value.length === 1) : n("auto-apply", w);
    }
    a();
  }, At = (i, w) => {
    const q = Se(b(), { month: O.value(w), year: I.value(w) }), v = i < 0 ? st(q, 1) : Dt(q, 1);
    L(pe(v), ke(v), i < 0, e.preventMinMaxNavigation) && (J(w, pe(v), ke(v)), M.value.multiCalendars && !e.multiCalendarsSolo && ve(w), n("update-month-year", { instance: w, month: pe(v), year: ke(v) }), t());
  }, pt = (i) => {
    On(i) && On(m.value) && lt(z.hours) && lt(z.minutes) ? (i[0] && m.value[0] && (m.value[0] = Ee(i[0], z.hours[0], z.minutes[0], ee())), i[1] && m.value[1] && (m.value[1] = Ee(i[1], z.hours[1], z.minutes[1], ee(!1)))) : e.multiDates && Array.isArray(m.value) ? m.value[m.value.length - 1] = Je(i) : !e.range && !In(i) && (m.value = Je(i)), n("time-update");
  }, Kt = (i, w = !0, q = !1) => {
    const v = w ? i : z.hours, B = !w && !q ? i : z.minutes, we = q ? i : z.seconds;
    if (e.range && In(m.value) && lt(v) && lt(B) && lt(we) && !e.disableTimeRangeValidation) {
      const be = (Z) => Ee(m.value[Z], v[Z], B[Z], we[Z]), xe = (Z) => mn(m.value[Z], 0);
      if (me(m.value[0], m.value[1]) && (vn(be(0), xe(1)) || fn(be(1), xe(0))))
        return;
    }
    if (G("hours", v), G("minutes", B), G("seconds", we), m.value)
      if (e.multiDates) {
        const be = l();
        be && pt(be);
      } else
        pt(m.value);
    else
      e.timePicker && pt(e.range ? [b(), b()] : b());
    a();
  }, xt = (i, w) => {
    e.monthChangeOnScroll && At(e.monthChangeOnScroll !== "inverse" ? -i.deltaY : i.deltaY, w);
  }, jt = (i, w, q = !1) => {
    e.monthChangeOnArrows && e.vertical === q && St(i, w);
  }, St = (i, w) => {
    At(i === "right" ? -1 : 1, w);
  };
  return {
    time: z,
    month: O,
    year: I,
    modelValue: m,
    calendars: X,
    monthYearSelect: zt,
    isDisabled: h,
    updateTime: Kt,
    getWeekNum: ge,
    selectDate: ae,
    updateMonthYear: Wt,
    handleScroll: xt,
    getMarker: (i) => e.markers.find((w) => me(P(i.value), P(w.date))),
    handleArrow: jt,
    handleSwipe: St,
    selectCurrentDate: () => {
      e.range ? m.value && Array.isArray(m.value) && m.value[0] ? m.value = _e(b(), m.value[0]) ? [b(), m.value[0]] : [m.value[0], b()] : m.value = [b()] : m.value = b(), y();
    },
    presetDateRange: (i, w) => {
      w || i.length && i.length <= 2 && e.range && (m.value = i.map((q) => b(q)), y(), e.multiCalendars && dt().then(() => te(!0)));
    }
  };
}, er = (e, n, a) => {
  const t = W(), {
    getZonedToUtc: s,
    getZonedDate: c,
    formatDate: h,
    getDefaultPattern: P,
    checkRangeEnabled: Y,
    checkPartialRangeValue: D,
    isValidDate: L,
    setDateMonthOrYear: M,
    defaults: m
  } = Ve(n), T = W(""), Q = Mt(n, "format");
  tt(t, () => {
    e("internal-model-change", t.value);
  }), tt(Q, () => {
    o();
  });
  const X = (y) => {
    const j = y || b();
    return n.modelType ? d(j) : {
      hours: je(j),
      minutes: Ge(j),
      seconds: n.enableSeconds ? yt(j) : 0
    };
  }, z = (y) => n.modelType ? d(y) : { month: pe(y), year: ke(y) }, O = (y) => Array.isArray(y) ? Y(() => [
    ut(b(), y[0]),
    y[1] ? ut(b(), y[1]) : D()
  ]) : ut(b(), +y), I = (y, j) => (typeof y == "string" || typeof y == "number") && n.modelType ? r(y) : j, V = (y) => Array.isArray(y) ? [
    I(
      y[0],
      Ee(null, +y[0].hours, +y[0].minutes, y[0].seconds)
    ),
    I(
      y[1],
      Ee(null, +y[1].hours, +y[1].minutes, y[1].seconds)
    )
  ] : I(y, Ee(null, y.hours, y.minutes, y.seconds)), J = (y) => Array.isArray(y) ? n.multiDates ? y.map((j) => I(j, M(null, +j.month, +j.year))) : Y(() => [
    I(y[0], M(null, +y[0].month, +y[0].year)),
    I(
      y[1],
      y[1] ? M(null, +y[1].month, +y[1].year) : D()
    )
  ]) : I(y, M(null, +y.month, +y.year)), G = (y) => {
    if (Array.isArray(y))
      return y.map((j) => r(j));
    throw new Error(Ft.dateArr("multi-dates"));
  }, te = (y) => {
    if (Array.isArray(y))
      return [b(y[0]), b(y[1])];
    throw new Error(Ft.dateArr("week-picker"));
  }, se = (y) => n.modelAuto ? Array.isArray(y) ? [r(y[0]), r(y[1])] : n.autoApply ? [r(y)] : [r(y), null] : Array.isArray(y) ? Y(() => [
    r(y[0]),
    y[1] ? r(y[1]) : D()
  ]) : r(y), S = () => {
    Array.isArray(t.value) && n.range && t.value.length === 1 && t.value.push(D());
  }, E = () => {
    const y = t.value;
    return [
      d(y[0]),
      y[1] ? d(y[1]) : D()
    ];
  }, U = () => t.value[1] ? E() : d(Me(t.value[0])), f = () => (t.value || []).map((y) => d(y)), _ = () => (S(), n.modelAuto ? U() : n.multiDates ? f() : Array.isArray(t.value) ? Y(() => E()) : d(Me(t.value))), K = (y) => y ? n.timePicker ? V(Me(y)) : n.monthPicker ? J(Me(y)) : n.yearPicker ? O(Me(y)) : n.multiDates ? G(Me(y)) : n.weekPicker ? te(Me(y)) : se(Me(y)) : null, oe = (y) => {
    const j = K(y);
    L(Me(j)) ? (t.value = Me(j), o()) : (t.value = null, T.value = "");
  }, ee = () => {
    var j;
    const y = (ne) => {
      var Ne;
      return bt(ne, (Ne = m.value.textInputOptions) == null ? void 0 : Ne.format);
    };
    return `${y(t.value[0])} ${(j = m.value.textInputOptions) == null ? void 0 : j.rangeSeparator} ${t.value[1] ? y(t.value[1]) : ""}`;
  }, N = () => {
    var y;
    return a.value && t.value ? Array.isArray(t.value) ? ee() : bt(t.value, (y = m.value.textInputOptions) == null ? void 0 : y.format) : h(t.value);
  }, l = () => {
    var y;
    return t.value ? n.multiDates ? t.value.map((j) => h(j)).join("; ") : n.textInput && typeof ((y = m.value.textInputOptions) == null ? void 0 : y.format) == "string" ? N() : h(t.value) : "";
  }, o = () => {
    !n.format || typeof n.format == "string" ? T.value = l() : T.value = n.format(t.value);
  }, r = (y) => {
    if (n.utc) {
      const j = new Date(y);
      return n.utc === "preserve" ? new Date(j.getTime() + j.getTimezoneOffset() * 6e4) : j;
    }
    return n.modelType ? n.modelType === "date" || n.modelType === "timestamp" ? c(new Date(y)) : n.modelType === "format" && (typeof n.format == "string" || !n.format) ? on(y, P(), /* @__PURE__ */ new Date()) : c(on(y, n.modelType, /* @__PURE__ */ new Date())) : c(new Date(y));
  }, d = (y) => y ? n.utc ? ma(y, n.utc === "preserve") : n.modelType ? n.modelType === "timestamp" ? +s(y) : n.modelType === "format" && (typeof n.format == "string" || !n.format) ? h(s(y)) : h(s(y), n.modelType) : s(y) : "", A = (y) => {
    e("update:model-value", y);
  }, H = (y) => Array.isArray(t.value) ? n.multiDates ? t.value.map((j) => y(j)) : [
    y(t.value[0]),
    t.value[1] ? y(t.value[1]) : D()
  ] : y(Me(t.value)), R = (y) => A(Me(H(y)));
  return {
    inputValue: T,
    internalModelValue: t,
    checkBeforeEmit: () => t.value ? n.range ? n.partialRange ? t.value.length >= 1 : t.value.length === 2 : !!t.value : !1,
    parseExternalModelValue: oe,
    formatInputValue: o,
    emitModelValue: () => (o(), n.monthPicker ? R(z) : n.timePicker ? R(X) : n.yearPicker ? R(ke) : n.weekPicker ? A(t.value) : A(_()))
  };
}, tr = (e, n) => {
  const { validateMonthYearInRange: a, validateMaxDate: t, validateMinDate: s, defaults: c } = Ve(e), h = (M, m) => {
    let T = M;
    return c.value.filters.months.includes(pe(T)) ? (T = m ? st(M, 1) : Dt(M, 1), h(T, m)) : T;
  }, P = (M, m) => {
    let T = M;
    return c.value.filters.years.includes(ke(T)) ? (T = m ? ua(M, 1) : da(M, 1), P(T, m)) : T;
  }, Y = (M) => {
    const m = Se(/* @__PURE__ */ new Date(), { month: e.month, year: e.year });
    let T = M ? st(m, 1) : Dt(m, 1), Q = pe(T), X = ke(T);
    c.value.filters.months.includes(Q) && (T = h(T, M), Q = pe(T), X = ke(T)), c.value.filters.years.includes(X) && (T = P(T, M), X = ke(T)), a(Q, X, M, e.preventMinMaxNavigation) && D(Q, X);
  }, D = (M, m) => {
    n("update-month-year", { month: M, year: m });
  }, L = F(() => (M) => {
    if (!e.preventMinMaxNavigation || M && !e.maxDate || !M && !e.minDate)
      return !1;
    const m = Se(/* @__PURE__ */ new Date(), { month: e.month, year: e.year }), T = M ? st(m, 1) : Dt(m, 1), Q = [pe(T), ke(T)];
    return M ? !t(...Q) : !s(...Q);
  });
  return { handleMonthYearChange: Y, isDisabled: L, updateMonthYear: D };
};
var It = /* @__PURE__ */ ((e) => (e.center = "center", e.left = "left", e.right = "right", e))(It || {});
const nr = (e, n, a, t) => {
  const s = W({
    top: "0",
    left: "0",
    transform: "none"
  }), c = W(!1), h = Mt(t, "teleportCenter");
  tt(h, () => {
    X();
  });
  const P = (S) => {
    if (t.teleport) {
      const E = S.getBoundingClientRect();
      return {
        left: E.left + window.scrollX,
        top: E.top + window.scrollY
      };
    }
    return { top: 0, left: 0 };
  }, Y = (S, E) => {
    s.value.left = `${S + E}px`, s.value.transform = "translateX(-100%)";
  }, D = (S) => {
    s.value.left = `${S}px`, s.value.transform = "translateX(0)";
  }, L = (S, E, U = !1) => {
    t.position === It.left && D(S), t.position === It.right && Y(S, E), t.position === It.center && (s.value.left = `${S + E / 2}px`, s.value.transform = U ? "translate(-50%, -50%)" : "translateX(-50%)");
  }, M = (S) => {
    const { width: E, height: U } = S.getBoundingClientRect(), { top: f, left: _ } = t.altPosition ? t.altPosition(S) : P(S);
    return { top: +f, left: +_, width: E, height: U };
  }, m = () => {
    const S = $e(n);
    if (S) {
      const { top: E, left: U, width: f, height: _ } = M(S);
      s.value.top = `${E + _ / 2}px`, s.value.transform = "translateY(-50%)", L(U, f, !0);
    }
  }, T = () => {
    s.value.left = "50%", s.value.top = "50%", s.value.transform = "translate(-50%, -50%)", s.value.position = "fixed";
  }, Q = () => {
    const S = $e(n), { top: E, left: U, transform: f } = t.altPosition(S);
    s.value = { top: `${E}px`, left: `${U}px`, transform: f || "" };
  }, X = (S = !0) => {
    if (!t.inline)
      return h.value ? T() : t.altPosition !== null ? Q() : (S && a("recalculate-position"), G());
  }, z = ({
    inputEl: S,
    menuEl: E,
    left: U,
    width: f
  }) => {
    window.screen.width > 768 && L(U, f), V(S, E);
  }, O = (S, E) => {
    const { top: U, left: f, height: _, width: K } = M(S);
    s.value.top = `${_ + U + +t.offset}px`, z({ inputEl: S, menuEl: E, left: f, width: K }), c.value = !1;
  }, I = (S, E) => {
    const { top: U, left: f, width: _ } = M(S), { height: K } = E.getBoundingClientRect();
    s.value.top = `${U - K - +t.offset}px`, z({ inputEl: S, menuEl: E, left: f, width: _ }), c.value = !0;
  }, V = (S, E) => {
    if (t.autoPosition) {
      const { left: U, width: f } = M(S), { left: _, right: K } = E.getBoundingClientRect();
      return _ <= 0 || _ <= U ? D(U) : K >= document.documentElement.clientWidth ? Y(U, f) : L(U, f);
    }
  }, J = (S, E) => {
    const { height: U } = E.getBoundingClientRect(), { top: f, height: _ } = S.getBoundingClientRect(), oe = window.innerHeight - f - _, ee = f;
    return U <= oe ? O(S, E) : U > oe && U <= ee ? I(S, E) : oe >= ee ? O(S, E) : I(S, E);
  }, G = () => {
    const S = $e(n), E = $e(e);
    if (S && E)
      return t.autoPosition ? J(S, E) : O(S, E);
  }, te = function(S) {
    if (S) {
      const E = S.scrollHeight > S.clientHeight, f = window.getComputedStyle(S).overflowY.indexOf("hidden") !== -1;
      return E && !f;
    }
    return !0;
  }, se = function(S) {
    return !S || S === document.body || S.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? window : te(S) ? S : se(S.parentNode);
  };
  return { openOnTop: c, menuPosition: s, setMenuPosition: X, setInitialPosition: m, getScrollableParent: se };
}, vt = [
  { name: "clock-icon", use: ["time", "calendar"] },
  { name: "arrow-left", use: ["month-year", "calendar"] },
  { name: "arrow-right", use: ["month-year", "calendar"] },
  { name: "arrow-up", use: ["time", "calendar"] },
  { name: "arrow-down", use: ["time", "calendar"] },
  { name: "calendar-icon", use: ["month-year", "time", "calendar"] },
  { name: "day", use: ["calendar"] },
  { name: "month-overlay-value", use: ["calendar", "month-year"] },
  { name: "year-overlay-value", use: ["calendar", "month-year"] },
  { name: "year-overlay", use: ["month-year"] },
  { name: "month-overlay", use: ["month-year"] },
  { name: "month-overlay-header", use: ["month-year"] },
  { name: "year-overlay-header", use: ["month-year"] },
  { name: "hours-overlay-value", use: ["calendar", "time"] },
  { name: "minutes-overlay-value", use: ["calendar", "time"] },
  { name: "seconds-overlay-value", use: ["calendar", "time"] },
  { name: "hours", use: ["calendar", "time"] },
  { name: "minutes", use: ["calendar", "time"] },
  { name: "month", use: ["calendar", "month-year"] },
  { name: "year", use: ["calendar", "month-year"] },
  { name: "action-select", use: ["action"] },
  { name: "action-preview", use: ["action"] },
  { name: "calendar-header", use: ["calendar"] },
  { name: "marker-tooltip", use: ["calendar"] },
  { name: "now-button", use: [] },
  { name: "time-picker-overlay", use: ["calendar", "time"] },
  { name: "am-pm-button", use: ["calendar", "time"] },
  { name: "left-sidebar", use: ["menu"] },
  { name: "right-sidebar", use: ["menu"] },
  { name: "month-year", use: ["month-year"] },
  { name: "time-picker", use: ["menu"] },
  { name: "action-row", use: ["action"] }
], ar = [{ name: "trigger" }, { name: "input-icon" }, { name: "clear-icon" }, { name: "dp-input" }], rr = {
  all: () => vt,
  monthYear: () => vt.filter((e) => e.use.includes("month-year")),
  input: () => ar,
  timePicker: () => vt.filter((e) => e.use.includes("time")),
  action: () => vt.filter((e) => e.use.includes("action")),
  calendar: () => vt.filter((e) => e.use.includes("calendar")),
  menu: () => vt.filter((e) => e.use.includes("menu"))
}, it = (e, n, a) => {
  const t = [];
  return rr[n]().forEach((s) => {
    e[s.name] && t.push(s.name);
  }), a && a.length && a.forEach((s) => {
    s.slot && t.push(s.slot);
  }), t;
}, Ut = (e) => ({ transitionName: F(() => (a) => e && typeof e != "boolean" ? a ? e.open : e.close : ""), showTransition: !!e }), at = {
  multiCalendars: { type: [Boolean, Number, String], default: null },
  modelValue: { type: [String, Date, Array, Object, Number], default: null },
  modelType: { type: String, default: null },
  position: { type: String, default: "center" },
  dark: { type: Boolean, default: !1 },
  format: {
    type: [String, Function],
    default: () => null
  },
  closeOnScroll: { type: Boolean, default: !1 },
  autoPosition: { type: Boolean, default: !0 },
  closeOnAutoApply: { type: Boolean, default: !0 },
  altPosition: { type: Function, default: null },
  transitions: { type: [Boolean, Object], default: !0 },
  formatLocale: { type: Object, default: null },
  utc: { type: [Boolean, String], default: !1 },
  ariaLabels: { type: Object, default: () => ({}) },
  offset: { type: [Number, String], default: 10 },
  hideNavigation: { type: Array, default: () => [] },
  timezone: { type: String, default: null },
  vertical: { type: Boolean, default: !1 },
  disableMonthYearSelect: { type: Boolean, default: !1 },
  menuClassName: { type: String, default: null },
  dayClass: { type: Function, default: null },
  yearRange: { type: Array, default: () => [1900, 2100] },
  multiCalendarsSolo: { type: Boolean, default: !1 },
  calendarCellClassName: { type: String, default: null },
  enableTimePicker: { type: Boolean, default: !0 },
  autoApply: { type: Boolean, default: !1 },
  disabledDates: { type: [Array, Function], default: () => [] },
  monthNameFormat: { type: String, default: "short" },
  startDate: { type: [Date, String], default: null },
  startTime: { type: [Object, Array], default: null },
  hideOffsetDates: { type: Boolean, default: !1 },
  autoRange: { type: [Number, String], default: null },
  noToday: { type: Boolean, default: !1 },
  disabledWeekDays: { type: Array, default: () => [] },
  allowedDates: { type: Array, default: () => [] },
  showNowButton: { type: Boolean, default: !1 },
  nowButtonLabel: { type: String, default: "Now" },
  markers: { type: Array, default: () => [] },
  modeHeight: { type: [Number, String], default: 255 },
  escClose: { type: Boolean, default: !0 },
  spaceConfirm: { type: Boolean, default: !0 },
  monthChangeOnArrows: { type: Boolean, default: !0 },
  presetRanges: { type: Array, default: () => [] },
  flow: { type: Array, default: () => [] },
  partialFlow: { type: Boolean, default: !1 },
  preventMinMaxNavigation: { type: Boolean, default: !1 },
  minRange: { type: [Number, String], default: null },
  maxRange: { type: [Number, String], default: null },
  multiDatesLimit: { type: [Number, String], default: null },
  reverseYears: { type: Boolean, default: !1 },
  keepActionRow: { type: Boolean, default: !1 },
  weekPicker: { type: Boolean, default: !1 },
  filters: { type: Object, default: () => ({}) },
  arrowNavigation: { type: Boolean, default: !1 },
  multiStatic: { type: Boolean, default: !0 },
  disableTimeRangeValidation: { type: Boolean, default: !1 },
  highlight: {
    type: [Array, Function],
    default: null
  },
  highlightWeekDays: {
    type: Array,
    default: null
  },
  highlightDisabledDays: { type: Boolean, default: !1 },
  teleport: { type: [String, Boolean], default: null },
  teleportCenter: { type: Boolean, default: !1 },
  locale: { type: String, default: "en-Us" },
  weekNumName: { type: String, default: "W" },
  weekStart: { type: [Number, String], default: 1 },
  weekNumbers: {
    type: [String, Function],
    default: null
  },
  calendarClassName: { type: String, default: null },
  noSwipe: { type: Boolean, default: !1 },
  monthChangeOnScroll: { type: [Boolean, String], default: !0 },
  dayNames: {
    type: [Function, Array],
    default: null
  },
  monthPicker: { type: Boolean, default: !1 },
  customProps: { type: Object, default: null },
  yearPicker: { type: Boolean, default: !1 },
  modelAuto: { type: Boolean, default: !1 },
  selectText: { type: String, default: "Select" },
  cancelText: { type: String, default: "Cancel" },
  previewFormat: {
    type: [String, Function],
    default: () => ""
  },
  multiDates: { type: Boolean, default: !1 },
  partialRange: { type: Boolean, default: !0 },
  ignoreTimeValidation: { type: Boolean, default: !1 },
  minDate: { type: [Date, String], default: null },
  maxDate: { type: [Date, String], default: null },
  minTime: { type: Object, default: null },
  maxTime: { type: Object, default: null },
  name: { type: String, default: null },
  placeholder: { type: String, default: "" },
  hideInputIcon: { type: Boolean, default: !1 },
  clearable: { type: Boolean, default: !0 },
  state: { type: Boolean, default: null },
  required: { type: Boolean, default: !1 },
  autocomplete: { type: String, default: "off" },
  inputClassName: { type: String, default: null },
  inlineWithInput: { type: Boolean, default: !1 },
  textInputOptions: { type: Object, default: () => null },
  fixedStart: { type: Boolean, default: !1 },
  fixedEnd: { type: Boolean, default: !1 },
  timePicker: { type: Boolean, default: !1 },
  enableSeconds: { type: Boolean, default: !1 },
  is24: { type: Boolean, default: !0 },
  noHoursOverlay: { type: Boolean, default: !1 },
  noMinutesOverlay: { type: Boolean, default: !1 },
  noSecondsOverlay: { type: Boolean, default: !1 },
  hoursGridIncrement: { type: [String, Number], default: 1 },
  minutesGridIncrement: { type: [String, Number], default: 5 },
  secondsGridIncrement: { type: [String, Number], default: 5 },
  hoursIncrement: { type: [Number, String], default: 1 },
  minutesIncrement: { type: [Number, String], default: 1 },
  secondsIncrement: { type: [Number, String], default: 1 },
  range: { type: Boolean, default: !1 },
  uid: { type: String, default: null },
  disabled: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  inline: { type: Boolean, default: !1 },
  textInput: { type: Boolean, default: !1 },
  onClickOutside: { type: Function, default: null },
  noDisabledRange: { type: Boolean, default: !1 },
  sixWeeks: { type: Boolean, default: !1 }
}, lr = ["aria-label", "aria-disabled", "aria-readonly"], or = {
  key: 1,
  class: "dp__input_wrap"
}, sr = ["id", "name", "inputmode", "placeholder", "disabled", "readonly", "required", "value", "autocomplete", "onKeydown"], ir = {
  key: 2,
  class: "dp__input_icon"
}, ur = {
  key: 4,
  class: "dp__clear_icon"
}, dr = /* @__PURE__ */ We({
  __name: "DatepickerInput",
  props: {
    isMenuOpen: { type: Boolean, default: !1 },
    inputValue: { type: String, default: "" },
    ...at
  },
  emits: [
    "clear",
    "open",
    "update:input-value",
    "set-input-date",
    "close",
    "select-date",
    "set-empty-date",
    "toggle",
    "focus-prev",
    "focus",
    "blur"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { getDefaultPattern: s, isValidDate: c, defaults: h, getDefaultStartTime: P, assignDefaultTime: Y } = Ve(t), D = W(), L = W(null), M = W(!1), m = F(
      () => ({
        dp__pointer: !t.disabled && !t.readonly && !t.textInput,
        dp__disabled: t.disabled,
        dp__input_readonly: !t.textInput,
        dp__input: !0,
        dp__input_icon_pad: !t.hideInputIcon,
        dp__input_valid: t.state,
        dp__input_invalid: t.state === !1,
        dp__input_focus: M.value || t.isMenuOpen,
        dp__input_reg: !t.textInput,
        [t.inputClassName]: !!t.inputClassName
      })
    ), T = () => {
      a("set-input-date", null), t.autoApply && (a("set-empty-date"), D.value = null);
    }, Q = (f) => {
      var K;
      const _ = P();
      return va(
        f,
        ((K = h.value.textInputOptions) == null ? void 0 : K.format) || s(),
        _ || Y({}),
        t.inputValue
      );
    }, X = (f) => {
      const { rangeSeparator: _ } = h.value.textInputOptions, [K, oe] = f.split(`${_}`);
      if (K) {
        const ee = Q(K.trim()), N = oe ? Q(oe.trim()) : null, l = ee && N ? [ee, N] : [ee];
        D.value = ee ? l : null;
      }
    }, z = (f) => {
      if (t.range)
        X(f);
      else if (t.multiDates) {
        const _ = f.split(";");
        D.value = _.map((K) => Q(K.trim())).filter((K) => K);
      } else
        D.value = Q(f);
    }, O = (f) => {
      var K;
      const { value: _ } = f.target;
      _ !== "" ? ((K = h.value.textInputOptions) != null && K.openMenu && !t.isMenuOpen && a("open"), z(_), a("set-input-date", D.value)) : T(), a("update:input-value", _);
    }, I = () => {
      var f, _;
      (f = h.value.textInputOptions) != null && f.enterSubmit && c(D.value) && t.inputValue !== "" ? (a("set-input-date", D.value, !0), D.value = null) : (_ = h.value.textInputOptions) != null && _.enterSubmit && t.inputValue === "" && (D.value = null, a("clear"));
    }, V = () => {
      var f, _;
      (f = h.value.textInputOptions) != null && f.tabSubmit && c(D.value) && t.inputValue !== "" ? (a("set-input-date", D.value, !0), D.value = null) : (_ = h.value.textInputOptions) != null && _.tabSubmit && t.inputValue === "" && (D.value = null, a("clear"));
    }, J = () => {
      M.value = !0, a("focus");
    }, G = (f) => {
      var _;
      f.preventDefault(), f.stopImmediatePropagation(), f.stopPropagation(), t.textInput && ((_ = h.value.textInputOptions) != null && _.openMenu) && !t.inlineWithInput ? t.isMenuOpen ? h.value.textInputOptions.enterSubmit && a("select-date") : a("open") : t.textInput || a("toggle");
    }, te = () => {
      M.value = !1, t.isMenuOpen || a("blur"), t.autoApply && t.textInput && D.value && (a("set-input-date", D.value), a("select-date"), D.value = null);
    }, se = () => {
      a("clear");
    }, S = (f) => {
      if (!t.textInput) {
        if (f.code === "Tab")
          return;
        f.preventDefault();
      }
    };
    return n({
      focusInput: () => {
        L.value && L.value.focus({ preventScroll: !0 });
      },
      setParsedDate: (f) => {
        D.value = f;
      }
    }), (f, _) => {
      var K;
      return p(), C("div", {
        onClick: G,
        "aria-label": (K = u(h).ariaLabels) == null ? void 0 : K.input,
        role: "textbox",
        "aria-multiline": "false",
        "aria-disabled": f.disabled,
        "aria-readonly": f.readonly
      }, [
        f.$slots.trigger && !f.$slots["dp-input"] && !f.inline ? x(f.$slots, "trigger", { key: 0 }) : $("", !0),
        !f.$slots.trigger && (!f.inline || f.inlineWithInput) ? (p(), C("div", or, [
          f.$slots["dp-input"] && !f.$slots.trigger && !f.inline ? x(f.$slots, "dp-input", {
            key: 0,
            value: e.inputValue,
            onInput: O,
            onEnter: I,
            onTab: V,
            onClear: se
          }) : $("", !0),
          f.$slots["dp-input"] ? $("", !0) : (p(), C("input", {
            key: 1,
            ref_key: "inputRef",
            ref: L,
            id: f.uid ? `dp-input-${f.uid}` : void 0,
            name: f.name,
            class: ye(u(m)),
            inputmode: f.textInput ? "text" : "none",
            placeholder: f.placeholder,
            disabled: f.disabled,
            readonly: f.readonly,
            required: f.required,
            value: e.inputValue,
            autocomplete: f.autocomplete,
            onInput: O,
            onKeydown: [
              de(G, ["enter"]),
              de(V, ["tab"]),
              S
            ],
            onBlur: te,
            onFocus: J,
            onKeypress: S
          }, null, 42, sr)),
          f.$slots["input-icon"] && !f.hideInputIcon ? (p(), C("span", ir, [
            x(f.$slots, "input-icon")
          ])) : $("", !0),
          !f.$slots["input-icon"] && !f.hideInputIcon && !f.$slots["dp-input"] ? (p(), fe(u(Lt), {
            key: 3,
            class: "dp__input_icon dp__input_icons"
          })) : $("", !0),
          f.$slots["clear-icon"] && e.inputValue && f.clearable && !f.disabled && !f.readonly ? (p(), C("span", ur, [
            x(f.$slots, "clear-icon", { clear: se })
          ])) : $("", !0),
          f.clearable && !f.$slots["clear-icon"] && e.inputValue && !f.disabled && !f.readonly ? (p(), fe(u(fa), {
            key: 5,
            class: "dp__clear_icon dp__input_icons",
            "data-test": "clear-icon",
            onClick: Ze(se, ["stop", "prevent"])
          }, null, 8, ["onClick"])) : $("", !0)
        ])) : $("", !0)
      ], 8, lr);
    };
  }
}), cr = { class: "dp__selection_preview" }, fr = { class: "dp__action_buttons" }, vr = ["onKeydown"], mr = /* @__PURE__ */ We({
  __name: "ActionRow",
  props: {
    calendarWidth: { type: Number, default: 0 },
    menuMount: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    ...at
  },
  emits: ["close-picker", "select-date", "invalid-select"],
  setup(e, { emit: n }) {
    const a = e, { formatDate: t, isValidTime: s, defaults: c } = Ve(a), { buildMatrix: h } = nt(), P = W(null), Y = W(null);
    He(() => {
      a.arrowNavigation && h([$e(P), $e(Y)], "actionRow");
    });
    const D = F(() => a.range && !a.partialRange && a.internalModelValue ? a.internalModelValue.length === 2 : !0), L = F(() => !m.value || !T.value || !D.value), M = F(() => ({
      dp__action: !0,
      dp__select: !0,
      dp__action_disabled: L.value
    })), m = F(() => !a.enableTimePicker || a.ignoreTimeValidation ? !0 : s(a.internalModelValue)), T = F(() => a.monthPicker ? a.range && Array.isArray(a.internalModelValue) ? !a.internalModelValue.filter((J) => !O(J)).length : O(a.internalModelValue) : !0), Q = () => {
      const V = c.value.previewFormat;
      return a.timePicker || a.monthPicker, V(Me(a.internalModelValue));
    }, X = () => {
      const V = a.internalModelValue;
      return c.value.multiCalendars > 0 ? `${t(V[0])} - ${t(V[1])}` : [t(V[0]), t(V[1])];
    }, z = F(() => !a.internalModelValue || !a.menuMount ? "" : typeof c.value.previewFormat == "string" ? Array.isArray(a.internalModelValue) ? a.internalModelValue.length === 2 && a.internalModelValue[1] ? X() : a.multiDates ? a.internalModelValue.map((V) => `${t(V)}`) : a.modelAuto ? `${t(a.internalModelValue[0])}` : `${t(a.internalModelValue[0])} -` : t(a.internalModelValue) : Q()), O = (V) => {
      if (!a.monthPicker)
        return !0;
      let J = !0;
      const G = b(kt(V));
      if (a.minDate && a.maxDate) {
        const te = b(kt(a.minDate)), se = b(kt(a.maxDate));
        return Be(G, te) && _e(G, se) || me(G, te) || me(G, se);
      }
      if (a.minDate) {
        const te = b(kt(a.minDate));
        J = Be(G, te) || me(G, te);
      }
      if (a.maxDate) {
        const te = b(kt(a.maxDate));
        J = _e(G, te) || me(G, te);
      }
      return J;
    }, I = () => {
      m.value && T.value && D.value ? n("select-date") : n("invalid-select");
    };
    return (V, J) => (p(), C("div", {
      class: "dp__action_row",
      style: Qe(e.calendarWidth ? { width: `${e.calendarWidth}px` } : {})
    }, [
      V.$slots["action-row"] ? x(V.$slots, "action-row", Pe(Te({ key: 0 }, {
        internalModelValue: e.internalModelValue,
        disabled: u(L),
        selectDate: () => V.$emit("select-date"),
        closePicker: () => V.$emit("close-picker")
      }))) : (p(), C(ce, { key: 1 }, [
        re("div", cr, [
          V.$slots["action-preview"] ? x(V.$slots, "action-preview", {
            key: 0,
            value: e.internalModelValue
          }) : $("", !0),
          V.$slots["action-preview"] ? $("", !0) : (p(), C(ce, { key: 1 }, [
            Array.isArray(u(z)) ? $("", !0) : (p(), C(ce, { key: 0 }, [
              Ke(Ce(u(z)), 1)
            ], 64)),
            Array.isArray(u(z)) ? (p(!0), C(ce, { key: 1 }, De(u(z), (G, te) => (p(), C("div", { key: te }, Ce(G), 1))), 128)) : $("", !0)
          ], 64))
        ]),
        re("div", fr, [
          V.$slots["action-select"] ? x(V.$slots, "action-select", {
            key: 0,
            value: e.internalModelValue
          }) : $("", !0),
          V.$slots["action-select"] ? $("", !0) : (p(), C(ce, { key: 1 }, [
            V.inline ? $("", !0) : (p(), C("span", {
              key: 0,
              class: "dp__action dp__cancel",
              ref_key: "cancelButtonRef",
              ref: P,
              tabindex: "0",
              onClick: J[0] || (J[0] = (G) => V.$emit("close-picker")),
              onKeydown: [
                J[1] || (J[1] = de((G) => V.$emit("close-picker"), ["enter"])),
                J[2] || (J[2] = de((G) => V.$emit("close-picker"), ["space"]))
              ]
            }, Ce(V.cancelText), 545)),
            re("span", {
              class: ye(u(M)),
              tabindex: "0",
              onKeydown: [
                de(I, ["enter"]),
                de(I, ["space"])
              ],
              onClick: I,
              "data-test": "select-button",
              ref_key: "selectButtonRef",
              ref: Y
            }, Ce(V.selectText), 43, vr)
          ], 64))
        ])
      ], 64))
    ], 4));
  }
}), yr = ["aria-label"], gr = {
  class: "dp__calendar_header",
  role: "row"
}, hr = {
  key: 0,
  class: "dp__calendar_header_item",
  role: "gridcell"
}, pr = /* @__PURE__ */ re("div", { class: "dp__calendar_header_separator" }, null, -1), kr = ["aria-label"], wr = {
  key: 0,
  role: "gridcell",
  class: "dp__calendar_item dp__week_num"
}, br = { class: "dp__cell_inner" }, Dr = ["aria-selected", "aria-disabled", "aria-label", "data-test", "onClick", "onKeydown", "onMouseenter", "onMouseleave"], $r = /* @__PURE__ */ We({
  __name: "Calendar",
  props: {
    mappedDates: { type: Array, default: () => [] },
    getWeekNum: {
      type: Function,
      default: () => ""
    },
    specificMode: { type: Boolean, default: !1 },
    instance: { type: Number, default: 0 },
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    ...at
  },
  emits: [
    "select-date",
    "set-hover-date",
    "handle-scroll",
    "mount",
    "handle-swipe",
    "handle-space",
    "tooltip-open",
    "tooltip-close"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { buildMultiLevelMatrix: s } = nt(), { setDateMonthOrYear: c, defaults: h } = Ve(t), P = W(null), Y = W({
      bottom: "",
      left: "",
      transform: ""
    }), D = W([]), L = W(null), M = W(!0), m = W(""), T = W({ startX: 0, endX: 0, startY: 0, endY: 0 }), Q = W([]), X = W({ left: "50%" }), z = F(() => t.dayNames ? Array.isArray(t.dayNames) ? t.dayNames : t.dayNames(t.locale, +t.weekStart) : Ha(t.locale, +t.weekStart));
    He(() => {
      a("mount", { cmp: "calendar", refs: D }), t.noSwipe || L.value && (L.value.addEventListener("touchstart", f, { passive: !1 }), L.value.addEventListener("touchend", _, { passive: !1 }), L.value.addEventListener("touchmove", K, { passive: !1 })), t.monthChangeOnScroll && L.value && L.value.addEventListener("wheel", N, { passive: !1 });
    });
    const O = (l) => l ? t.vertical ? "vNext" : "next" : t.vertical ? "vPrevious" : "previous", I = (l, o) => {
      if (t.transitions) {
        const r = Ue(c(b(), t.month, t.year));
        m.value = Be(Ue(c(b(), l, o)), r) ? h.value.transitions[O(!0)] : h.value.transitions[O(!1)], M.value = !1, dt(() => {
          M.value = !0;
        });
      }
    }, V = F(
      () => ({
        dp__calendar_wrap: !0,
        [t.calendarClassName]: !!t.calendarClassName
      })
    ), J = F(() => (l) => {
      const o = xa(l);
      return {
        dp__marker_dot: o.type === "dot",
        dp__marker_line: o.type === "line"
      };
    }), G = F(() => (l) => me(l, P.value)), te = F(() => ({
      dp__calendar: !0,
      dp__calendar_next: h.value.multiCalendars > 0 && t.instance !== 0
    })), se = F(() => (l) => t.hideOffsetDates ? l.current : !0), S = F(() => t.specificMode ? { height: `${t.modeHeight}px` } : void 0), E = async (l, o, r) => {
      var d, A;
      if (a("set-hover-date", l), (A = (d = l.marker) == null ? void 0 : d.tooltip) != null && A.length) {
        const H = $e(D.value[o][r]);
        if (H) {
          const { width: R, height: g } = H.getBoundingClientRect();
          P.value = l.value;
          let k = { left: `${R / 2}px` }, y = -50;
          if (await dt(), Q.value[0]) {
            const { left: j, width: ne } = Q.value[0].getBoundingClientRect();
            j < 0 && (k = { left: "0" }, y = 0, X.value.left = `${R / 2}px`), window.innerWidth < j + ne && (k = { right: "0" }, y = 0, X.value.left = `${ne - R / 2}px`);
          }
          Y.value = {
            bottom: `${g}px`,
            ...k,
            transform: `translateX(${y}%)`
          }, a("tooltip-open", l.marker);
        }
      }
    }, U = (l) => {
      P.value && (P.value = null, Y.value = JSON.parse(JSON.stringify({ bottom: "", left: "", transform: "" })), a("tooltip-close", l.marker));
    }, f = (l) => {
      T.value.startX = l.changedTouches[0].screenX, T.value.startY = l.changedTouches[0].screenY;
    }, _ = (l) => {
      T.value.endX = l.changedTouches[0].screenX, T.value.endY = l.changedTouches[0].screenY, oe();
    }, K = (l) => {
      t.vertical && !t.inline && l.preventDefault();
    }, oe = () => {
      const l = t.vertical ? "Y" : "X";
      Math.abs(T.value[`start${l}`] - T.value[`end${l}`]) > 10 && a("handle-swipe", T.value[`start${l}`] > T.value[`end${l}`] ? "right" : "left");
    }, ee = (l, o, r) => {
      l && (Array.isArray(D.value[o]) ? D.value[o][r] = l : D.value[o] = [l]), t.arrowNavigation && s(D.value, "calendar");
    }, N = (l) => {
      t.monthChangeOnScroll && (l.preventDefault(), a("handle-scroll", l));
    };
    return n({ triggerTransition: I }), (l, o) => {
      var r;
      return p(), C("div", {
        class: ye(u(te))
      }, [
        re("div", {
          style: Qe(u(S))
        }, [
          e.specificMode ? $("", !0) : (p(), C("div", {
            key: 0,
            ref_key: "calendarWrapRef",
            ref: L,
            class: ye(u(V)),
            role: "grid",
            "aria-label": (r = u(h).ariaLabels) == null ? void 0 : r.calendarWrap
          }, [
            re("div", gr, [
              l.weekNumbers ? (p(), C("div", hr, Ce(l.weekNumName), 1)) : $("", !0),
              (p(!0), C(ce, null, De(u(z), (d, A) => (p(), C("div", {
                class: "dp__calendar_header_item",
                role: "gridcell",
                key: A,
                "data-test": "calendar-header"
              }, [
                l.$slots["calendar-header"] ? x(l.$slots, "calendar-header", {
                  key: 0,
                  day: d,
                  index: A
                }) : $("", !0),
                l.$slots["calendar-header"] ? $("", !0) : (p(), C(ce, { key: 1 }, [
                  Ke(Ce(d), 1)
                ], 64))
              ]))), 128))
            ]),
            pr,
            et(gt, {
              name: m.value,
              css: !!l.transitions
            }, {
              default: ie(() => {
                var d;
                return [
                  M.value ? (p(), C("div", {
                    key: 0,
                    class: "dp__calendar",
                    role: "grid",
                    "aria-label": (d = u(h).ariaLabels) == null ? void 0 : d.calendarDays
                  }, [
                    (p(!0), C(ce, null, De(e.mappedDates, (A, H) => (p(), C("div", {
                      class: "dp__calendar_row",
                      role: "row",
                      key: H
                    }, [
                      l.weekNumbers ? (p(), C("div", wr, [
                        re("div", br, Ce(e.getWeekNum(A.days)), 1)
                      ])) : $("", !0),
                      (p(!0), C(ce, null, De(A.days, (R, g) => {
                        var k, y, j;
                        return p(), C("div", {
                          role: "gridcell",
                          class: "dp__calendar_item",
                          ref_for: !0,
                          ref: (ne) => ee(ne, H, g),
                          key: g + H,
                          "aria-selected": R.classData.dp__active_date || R.classData.dp__range_start || R.classData.dp__range_start,
                          "aria-disabled": R.classData.dp__cell_disabled,
                          "aria-label": (y = (k = u(h).ariaLabels) == null ? void 0 : k.day) == null ? void 0 : y.call(k, R),
                          tabindex: "0",
                          "data-test": R.value,
                          onClick: Ze((ne) => l.$emit("select-date", R), ["stop", "prevent"]),
                          onKeydown: [
                            de((ne) => l.$emit("select-date", R), ["enter"]),
                            de((ne) => l.$emit("handle-space", R), ["space"])
                          ],
                          onMouseenter: (ne) => E(R, H, g),
                          onMouseleave: (ne) => U(R)
                        }, [
                          re("div", {
                            class: ye(["dp__cell_inner", R.classData])
                          }, [
                            l.$slots.day && u(se)(R) ? x(l.$slots, "day", {
                              key: 0,
                              day: +R.text,
                              date: R.value
                            }) : $("", !0),
                            l.$slots.day ? $("", !0) : (p(), C(ce, { key: 1 }, [
                              Ke(Ce(R.text), 1)
                            ], 64)),
                            R.marker && u(se)(R) ? (p(), C("div", {
                              key: 2,
                              class: ye(u(J)(R.marker)),
                              style: Qe(R.marker.color ? { backgroundColor: R.marker.color } : {})
                            }, null, 6)) : $("", !0),
                            u(G)(R.value) ? (p(), C("div", {
                              key: 3,
                              class: "dp__marker_tooltip",
                              ref_for: !0,
                              ref_key: "activeTooltip",
                              ref: Q,
                              style: Qe(Y.value)
                            }, [
                              (j = R.marker) != null && j.tooltip ? (p(), C("div", {
                                key: 0,
                                class: "dp__tooltip_content",
                                onClick: o[0] || (o[0] = Ze(() => {
                                }, ["stop"]))
                              }, [
                                (p(!0), C(ce, null, De(R.marker.tooltip, (ne, Ne) => (p(), C("div", {
                                  key: Ne,
                                  class: "dp__tooltip_text"
                                }, [
                                  l.$slots["marker-tooltip"] ? x(l.$slots, "marker-tooltip", {
                                    key: 0,
                                    tooltip: ne,
                                    day: R.value
                                  }) : $("", !0),
                                  l.$slots["marker-tooltip"] ? $("", !0) : (p(), C(ce, { key: 1 }, [
                                    re("div", {
                                      class: "dp__tooltip_mark",
                                      style: Qe(ne.color ? { backgroundColor: ne.color } : {})
                                    }, null, 4),
                                    re("div", null, Ce(ne.text), 1)
                                  ], 64))
                                ]))), 128)),
                                re("div", {
                                  class: "dp__arrow_bottom_tp",
                                  style: Qe(X.value)
                                }, null, 4)
                              ])) : $("", !0)
                            ], 4)) : $("", !0)
                          ], 2)
                        ], 40, Dr);
                      }), 128))
                    ]))), 128))
                  ], 8, kr)) : $("", !0)
                ];
              }),
              _: 3
            }, 8, ["name", "css"])
          ], 10, yr))
        ], 4)
      ], 2);
    };
  }
}), Mr = ["aria-label", "aria-disabled"], rn = /* @__PURE__ */ We({
  __name: "ActionIcon",
  props: {
    ariaLabel: { type: String, default: "" },
    disabled: { type: Boolean, default: !1 }
  },
  emits: ["activate", "set-ref"],
  setup(e, { emit: n }) {
    const a = W(null);
    return He(() => n("set-ref", a)), (t, s) => (p(), C("div", {
      class: "dp__month_year_col_nav",
      onClick: s[0] || (s[0] = (c) => t.$emit("activate")),
      onKeydown: [
        s[1] || (s[1] = de((c) => t.$emit("activate"), ["enter"])),
        s[2] || (s[2] = de((c) => t.$emit("activate"), ["space"]))
      ],
      tabindex: "0",
      role: "button",
      "aria-label": e.ariaLabel,
      "aria-disabled": e.disabled,
      ref_key: "elRef",
      ref: a
    }, [
      re("div", {
        class: ye(["dp__inner_nav", { dp__inner_nav_disabled: e.disabled }])
      }, [
        x(t.$slots, "default")
      ], 2)
    ], 40, Mr));
  }
}), Tr = ["onKeydown"], Ar = { class: "dp__selection_grid_header" }, Sr = ["aria-selected", "aria-disabled", "data-test", "onClick", "onKeydown", "onMouseover"], Cr = ["aria-label", "onKeydown"], $t = /* @__PURE__ */ We({
  __name: "SelectionGrid",
  props: {
    items: { type: Array, default: () => [] },
    modelValue: { type: [String, Number], default: null },
    multiModelValue: { type: Array, default: () => [] },
    disabledValues: { type: Array, default: () => [] },
    minValue: { type: [Number, String], default: null },
    maxValue: { type: [Number, String], default: null },
    year: { type: Number, default: 0 },
    skipActive: { type: Boolean, default: !1 },
    headerRefs: { type: Array, default: () => [] },
    skipButtonRef: { type: Boolean, default: !1 },
    monthPicker: { type: Boolean, default: !1 },
    yearPicker: { type: Boolean, default: !1 },
    escClose: { type: Boolean, default: !0 },
    type: { type: String, default: null },
    arrowNavigation: { type: Boolean, default: !1 },
    autoApply: { type: Boolean, default: !1 },
    textInput: { type: Boolean, default: !1 },
    ariaLabels: { type: Object, default: () => ({}) },
    hideNavigation: { type: Array, default: () => [] }
  },
  emits: ["update:model-value", "selected", "toggle", "reset-flow"],
  setup(e, { expose: n, emit: a }) {
    const t = e, { setSelectionGrid: s, buildMultiLevelMatrix: c, setMonthPicker: h } = nt(), { hideNavigationButtons: P } = Ve(t), Y = W(!1), D = W(null), L = W(null), M = W([]), m = W(), T = W(null), Q = W(0), X = W(null);
    Jn(() => {
      D.value = null;
    }), He(() => {
      dt().then(() => E()), O(), z(!0);
    }), dn(() => z(!1));
    const z = (N) => {
      var l;
      t.arrowNavigation && ((l = t.headerRefs) != null && l.length ? h(N) : s(N));
    }, O = () => {
      const N = $e(L);
      N && (t.textInput || N.focus({ preventScroll: !0 }), Y.value = N.clientHeight < N.scrollHeight);
    }, I = F(
      () => ({
        dp__overlay: !0
      })
    ), V = F(() => ({
      dp__overlay_col: !0
    })), J = (N) => t.skipActive ? !1 : N.value === t.modelValue, G = F(() => t.items.map((N) => N.filter((l) => l).map((l) => {
      var d, A, H;
      const o = t.disabledValues.some((R) => R === l.value) || S(l.value), r = (d = t.multiModelValue) != null && d.length ? (A = t.multiModelValue) == null ? void 0 : A.some(
        (R) => me(
          R,
          ut(
            t.monthPicker ? Ot(/* @__PURE__ */ new Date(), l.value) : /* @__PURE__ */ new Date(),
            t.monthPicker ? t.year : l.value
          )
        )
      ) : J(l);
      return {
        ...l,
        className: {
          dp__overlay_cell_active: r,
          dp__overlay_cell: !r,
          dp__overlay_cell_disabled: o,
          dp__overlay_cell_active_disabled: o && r,
          dp__overlay_cell_pad: !0,
          dp__cell_in_between: (H = t.multiModelValue) != null && H.length && t.skipActive ? f(l.value) : !1
        }
      };
    }))), te = F(
      () => ({
        dp__button: !0,
        dp__overlay_action: !0,
        dp__over_action_scroll: Y.value,
        dp__button_bottom: t.autoApply
      })
    ), se = F(() => {
      var N, l;
      return {
        dp__overlay_container: !0,
        dp__container_flex: ((N = t.items) == null ? void 0 : N.length) <= 6,
        dp__container_block: ((l = t.items) == null ? void 0 : l.length) > 6
      };
    }), S = (N) => {
      const l = t.maxValue || t.maxValue === 0, o = t.minValue || t.minValue === 0;
      return !l && !o ? !1 : l && o ? +N > +t.maxValue || +N < +t.minValue : l ? +N > +t.maxValue : o ? +N < +t.minValue : !1;
    }, E = () => {
      const N = $e(D), l = $e(L), o = $e(T), r = $e(X), d = o ? o.getBoundingClientRect().height : 0;
      l && (Q.value = l.getBoundingClientRect().height - d), N && r && (r.scrollTop = N.offsetTop - r.offsetTop - (Q.value / 2 - N.getBoundingClientRect().height) - d);
    }, U = (N) => {
      !t.disabledValues.some((l) => l === N) && !S(N) && (a("update:model-value", N), a("selected"));
    }, f = (N) => {
      const l = t.monthPicker ? t.year : N;
      return Kn(
        t.multiModelValue,
        ut(
          t.monthPicker ? Ot(/* @__PURE__ */ new Date(), m.value || 0) : /* @__PURE__ */ new Date(),
          t.monthPicker ? l : m.value || l
        ),
        ut(t.monthPicker ? Ot(/* @__PURE__ */ new Date(), N) : /* @__PURE__ */ new Date(), l)
      );
    }, _ = () => {
      a("toggle"), a("reset-flow");
    }, K = () => {
      t.escClose && _();
    }, oe = (N, l, o, r) => {
      N && (l.value === +t.modelValue && !t.disabledValues.includes(l.value) && (D.value = N), t.arrowNavigation && (Array.isArray(M.value[o]) ? M.value[o][r] = N : M.value[o] = [N], ee()));
    }, ee = () => {
      var l, o;
      const N = (l = t.headerRefs) != null && l.length ? [t.headerRefs].concat(M.value) : M.value.concat([t.skipButtonRef ? [] : [T.value]]);
      c(Me(N), (o = t.headerRefs) != null && o.length ? "monthPicker" : "selectionGrid");
    };
    return n({ focusGrid: O }), (N, l) => {
      var o;
      return p(), C("div", {
        ref_key: "gridWrapRef",
        ref: L,
        class: ye(u(I)),
        role: "dialog",
        tabindex: "0",
        onKeydown: de(K, ["esc"])
      }, [
        re("div", {
          class: ye(u(se)),
          ref_key: "containerRef",
          ref: X,
          role: "grid",
          style: Qe({ height: `${Q.value}px` })
        }, [
          re("div", Ar, [
            x(N.$slots, "header")
          ]),
          N.$slots.overlay ? x(N.$slots, "overlay", { key: 0 }) : (p(!0), C(ce, { key: 1 }, De(u(G), (r, d) => (p(), C("div", {
            class: "dp__overlay_row",
            key: d,
            role: "row"
          }, [
            (p(!0), C(ce, null, De(r, (A, H) => (p(), C("div", {
              role: "gridcell",
              class: ye(u(V)),
              key: A.value,
              "aria-selected": A.value === e.modelValue && !e.disabledValues.includes(A.value),
              "aria-disabled": A.className.dp__overlay_cell_disabled,
              ref_for: !0,
              ref: (R) => oe(R, A, d, H),
              tabindex: "0",
              "data-test": A.text,
              onClick: (R) => U(A.value),
              onKeydown: [
                de((R) => U(A.value), ["enter"]),
                de((R) => U(A.value), ["space"])
              ],
              onMouseover: (R) => m.value = A.value
            }, [
              re("div", {
                class: ye(A.className)
              }, [
                N.$slots.item ? x(N.$slots, "item", {
                  key: 0,
                  item: A
                }) : $("", !0),
                N.$slots.item ? $("", !0) : (p(), C(ce, { key: 1 }, [
                  Ke(Ce(A.text), 1)
                ], 64))
              ], 2)
            ], 42, Sr))), 128))
          ]))), 128))
        ], 6),
        N.$slots["button-icon"] ? _t((p(), C("div", {
          key: 0,
          role: "button",
          "aria-label": (o = e.ariaLabels) == null ? void 0 : o.toggleOverlay,
          class: ye(u(te)),
          tabindex: "0",
          ref_key: "toggleButton",
          ref: T,
          onClick: _,
          onKeydown: de(_, ["enter"])
        }, [
          x(N.$slots, "button-icon")
        ], 42, Cr)), [
          [Nt, !u(P)(e.type)]
        ]) : $("", !0)
      ], 42, Tr);
    };
  }
}), Pr = ["aria-label"], Bn = /* @__PURE__ */ We({
  __name: "RegularPicker",
  props: {
    ariaLabel: { type: String, default: "" },
    showSelectionGrid: { type: Boolean, default: !1 },
    modelValue: { type: Number, default: null },
    items: { type: Array, default: () => [] },
    disabledValues: { type: Array, default: () => [] },
    minValue: { type: Number, default: null },
    maxValue: { type: Number, default: null },
    slotName: { type: String, default: "" },
    overlaySlot: { type: String, default: "" },
    headerRefs: { type: Array, default: () => [] },
    escClose: { type: Boolean, default: !0 },
    type: { type: String, default: null },
    transitions: { type: [Object, Boolean], default: !1 },
    arrowNavigation: { type: Boolean, default: !1 },
    autoApply: { type: Boolean, default: !1 },
    textInput: { type: Boolean, default: !1 },
    ariaLabels: { type: Object, default: () => ({}) },
    hideNavigation: { type: Array, default: () => [] }
  },
  emits: ["update:model-value", "toggle", "set-ref"],
  setup(e, { emit: n }) {
    const a = e, { transitionName: t, showTransition: s } = Ut(a.transitions), c = W(null);
    return He(() => n("set-ref", c)), (h, P) => (p(), C(ce, null, [
      re("div", {
        class: "dp__month_year_select",
        onClick: P[0] || (P[0] = (Y) => h.$emit("toggle")),
        onKeydown: [
          P[1] || (P[1] = de((Y) => h.$emit("toggle"), ["enter"])),
          P[2] || (P[2] = de((Y) => h.$emit("toggle"), ["space"]))
        ],
        role: "button",
        "aria-label": e.ariaLabel,
        tabindex: "0",
        ref_key: "elRef",
        ref: c
      }, [
        x(h.$slots, "default")
      ], 40, Pr),
      et(gt, {
        name: u(t)(e.showSelectionGrid),
        css: u(s)
      }, {
        default: ie(() => [
          e.showSelectionGrid ? (p(), fe($t, Te({ key: 0 }, {
            modelValue: e.modelValue,
            items: e.items,
            disabledValues: e.disabledValues,
            minValue: e.minValue,
            maxValue: e.maxValue,
            escClose: e.escClose,
            type: e.type,
            arrowNavigation: e.arrowNavigation,
            textInput: e.textInput,
            autoApply: e.autoApply,
            ariaLabels: e.ariaLabels,
            hideNavigation: e.hideNavigation
          }, {
            "header-refs": [],
            "onUpdate:modelValue": P[3] || (P[3] = (Y) => h.$emit("update:model-value", Y)),
            onToggle: P[4] || (P[4] = (Y) => h.$emit("toggle"))
          }), Ye({
            "button-icon": ie(() => [
              h.$slots["calendar-icon"] ? x(h.$slots, "calendar-icon", { key: 0 }) : $("", !0),
              h.$slots["calendar-icon"] ? $("", !0) : (p(), fe(u(Lt), { key: 1 }))
            ]),
            _: 2
          }, [
            h.$slots[e.slotName] ? {
              name: "item",
              fn: ie(({ item: Y }) => [
                x(h.$slots, e.slotName, { item: Y })
              ]),
              key: "0"
            } : void 0,
            h.$slots[e.overlaySlot] ? {
              name: "overlay",
              fn: ie(() => [
                x(h.$slots, e.overlaySlot)
              ]),
              key: "1"
            } : void 0,
            h.$slots[`${e.overlaySlot}-header`] ? {
              name: "header",
              fn: ie(() => [
                x(h.$slots, `${e.overlaySlot}-header`)
              ]),
              key: "2"
            } : void 0
          ]), 1040)) : $("", !0)
        ]),
        _: 3
      }, 8, ["name", "css"])
    ], 64));
  }
}), _r = { class: "dp__month_year_row" }, Nr = { class: "dp__month_year_wrap" }, Rr = { class: "dp__month_picker_header" }, Or = ["aria-label"], Ir = ["aria-label"], Br = ["aria-label"], Yr = /* @__PURE__ */ We({
  __name: "MonthYearPicker",
  props: {
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    instance: { type: Number, default: 0 },
    years: { type: Array, default: () => [] },
    months: { type: Array, default: () => [] },
    internalModelValue: { type: [Date, Array], default: null },
    ...at
  },
  emits: ["update-month-year", "month-year-select", "mount", "reset-flow", "overlay-closed"],
  setup(e, { expose: n, emit: a }) {
    const t = e, { defaults: s } = Ve(t), { transitionName: c, showTransition: h } = Ut(s.value.transitions), { buildMatrix: P } = nt(), { handleMonthYearChange: Y, isDisabled: D, updateMonthYear: L } = tr(t, a), M = W(!1), m = W(!1), T = W([null, null, null, null]), Q = W(null), X = W(null), z = W(null);
    He(() => {
      a("mount");
    });
    const O = (g) => ({
      get: () => t[g],
      set: (k) => {
        const y = g === "month" ? "year" : "month";
        a("update-month-year", { [g]: k, [y]: t[y] }), a("month-year-select", g === "year"), g === "month" ? r(!0) : d(!0);
      }
    }), I = F(O("month")), V = F(O("year")), J = (g) => {
      const k = ke(b(g));
      return t.year === k;
    }, G = F(() => t.monthPicker ? Array.isArray(t.disabledDates) ? t.disabledDates.map((g) => b(g)).filter((g) => J(g)).map((g) => pe(g)) : [] : []), te = F(() => (g) => {
      const k = g === "month";
      return {
        showSelectionGrid: (k ? M : m).value,
        items: (k ? ee : N).value,
        disabledValues: s.value.filters[k ? "months" : "years"].concat(G.value),
        minValue: (k ? U : S).value,
        maxValue: (k ? f : E).value,
        headerRefs: k && t.monthPicker ? [Q.value, X.value, z.value] : [],
        escClose: t.escClose,
        transitions: s.value.transitions,
        ariaLabels: s.value.ariaLabels,
        textInput: t.textInput,
        autoApply: t.autoApply,
        arrowNavigation: t.arrowNavigation,
        hideNavigation: t.hideNavigation
      };
    }), se = F(() => (g) => ({
      month: t.month,
      year: t.year,
      items: g === "month" ? t.months : t.years,
      instance: t.instance,
      updateMonthYear: L,
      toggle: g === "month" ? r : d
    })), S = F(() => t.minDate ? ke(b(t.minDate)) : null), E = F(() => t.maxDate ? ke(b(t.maxDate)) : null), U = F(() => {
      if (t.minDate && S.value) {
        if (S.value > t.year)
          return 12;
        if (S.value === t.year)
          return pe(b(t.minDate));
      }
      return null;
    }), f = F(() => t.maxDate && E.value ? E.value < t.year ? -1 : E.value === t.year ? pe(b(t.maxDate)) : null : null), _ = F(() => (t.range || t.multiDates) && t.internalModelValue && (t.monthPicker || t.yearPicker) ? t.internalModelValue : []), K = (g) => {
      const k = [], y = (j) => j;
      for (let j = 0; j < g.length; j += 3) {
        const ne = [g[j], g[j + 1], g[j + 2]];
        k.push(y(ne));
      }
      return k;
    }, oe = F(() => {
      const g = t.months.find((k) => k.value === t.month);
      return g || { text: "", value: 0 };
    }), ee = F(() => K(t.months)), N = F(() => K(t.years)), l = F(() => s.value.multiCalendars ? t.multiCalendarsSolo ? !0 : t.instance === 0 : !0), o = F(() => s.value.multiCalendars ? t.multiCalendarsSolo ? !0 : t.instance === s.value.multiCalendars - 1 : !0), r = (g = !1) => {
      A(g), M.value = !M.value, M.value || a("overlay-closed");
    }, d = (g = !1) => {
      A(g), m.value = !m.value, m.value || a("overlay-closed");
    }, A = (g) => {
      g || a("reset-flow");
    }, H = (g = !1) => {
      D.value(g) || a("update-month-year", {
        year: g ? t.year + 1 : t.year - 1,
        month: t.month,
        fromNav: !0
      });
    }, R = (g, k) => {
      t.arrowNavigation && (T.value[k] = $e(g), P(T.value, "monthYear"));
    };
    return n({
      toggleMonthPicker: r,
      toggleYearPicker: d,
      handleMonthYearChange: Y
    }), (g, k) => {
      var y, j, ne, Ne, Xe;
      return p(), C("div", _r, [
        g.$slots["month-year"] ? x(g.$slots, "month-year", Pe(Te({ key: 0 }, { month: e.month, year: e.year, months: e.months, years: e.years, updateMonthYear: u(L), handleMonthYearChange: u(Y), instance: e.instance }))) : (p(), C(ce, { key: 1 }, [
          !g.monthPicker && !g.yearPicker ? (p(), C(ce, { key: 0 }, [
            u(l) && !g.vertical ? (p(), fe(rn, {
              key: 0,
              "aria-label": (y = u(s).ariaLabels) == null ? void 0 : y.prevMonth,
              disabled: u(D)(!1),
              onActivate: k[0] || (k[0] = (le) => u(Y)(!1)),
              onSetRef: k[1] || (k[1] = (le) => R(le, 0))
            }, {
              default: ie(() => [
                g.$slots["arrow-left"] ? x(g.$slots, "arrow-left", { key: 0 }) : $("", !0),
                g.$slots["arrow-left"] ? $("", !0) : (p(), fe(u(wn), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : $("", !0),
            re("div", Nr, [
              et(Bn, Te({
                type: "month",
                "slot-name": "month-overlay-val",
                "overlay-slot": "overlay-month",
                "aria-label": (j = u(s).ariaLabels) == null ? void 0 : j.openMonthsOverlay,
                modelValue: u(I),
                "onUpdate:modelValue": k[2] || (k[2] = (le) => ot(I) ? I.value = le : null)
              }, u(te)("month"), {
                onToggle: r,
                onSetRef: k[3] || (k[3] = (le) => R(le, 1))
              }), Ye({
                default: ie(() => [
                  g.$slots.month ? x(g.$slots, "month", Pe(Te({ key: 0 }, u(oe)))) : $("", !0),
                  g.$slots.month ? $("", !0) : (p(), C(ce, { key: 1 }, [
                    Ke(Ce(u(oe).text), 1)
                  ], 64))
                ]),
                _: 2
              }, [
                g.$slots["calendar-icon"] ? {
                  name: "calendar-icon",
                  fn: ie(() => [
                    x(g.$slots, "calendar-icon")
                  ]),
                  key: "0"
                } : void 0,
                g.$slots["month-overlay-value"] ? {
                  name: "month-overlay-val",
                  fn: ie(({ item: le }) => [
                    x(g.$slots, "month-overlay-value", {
                      text: le.text,
                      value: le.value
                    })
                  ]),
                  key: "1"
                } : void 0,
                g.$slots["month-overlay"] ? {
                  name: "overlay-month",
                  fn: ie(() => [
                    x(g.$slots, "month-overlay", Pe(Le(u(se)("month"))))
                  ]),
                  key: "2"
                } : void 0,
                g.$slots["month-overlay-header"] ? {
                  name: "overlay-month-header",
                  fn: ie(() => [
                    x(g.$slots, "month-overlay-header", { toggle: r })
                  ]),
                  key: "3"
                } : void 0
              ]), 1040, ["aria-label", "modelValue"]),
              et(Bn, Te({
                type: "year",
                "slot-name": "year-overlay-val",
                "overlay-slot": "overlay-year",
                "aria-label": (ne = u(s).ariaLabels) == null ? void 0 : ne.openYearsOverlay,
                modelValue: u(V),
                "onUpdate:modelValue": k[4] || (k[4] = (le) => ot(V) ? V.value = le : null)
              }, u(te)("year"), {
                onToggle: d,
                onSetRef: k[5] || (k[5] = (le) => R(le, 2))
              }), Ye({
                default: ie(() => [
                  g.$slots.year ? x(g.$slots, "year", {
                    key: 0,
                    year: e.year
                  }) : $("", !0),
                  g.$slots.year ? $("", !0) : (p(), C(ce, { key: 1 }, [
                    Ke(Ce(e.year), 1)
                  ], 64))
                ]),
                _: 2
              }, [
                g.$slots["calendar-icon"] ? {
                  name: "calendar-icon",
                  fn: ie(() => [
                    x(g.$slots, "calendar-icon")
                  ]),
                  key: "0"
                } : void 0,
                g.$slots["year-overlay-value"] ? {
                  name: "year-overlay-val",
                  fn: ie(({ item: le }) => [
                    x(g.$slots, "year-overlay-value", {
                      text: le.text,
                      value: le.value
                    })
                  ]),
                  key: "1"
                } : void 0,
                g.$slots["year-overlay"] ? {
                  name: "overlay-year",
                  fn: ie(() => [
                    x(g.$slots, "year-overlay", Pe(Le(u(se)("year"))))
                  ]),
                  key: "2"
                } : void 0,
                g.$slots["year-overlay-header"] ? {
                  name: "overlay-year-header",
                  fn: ie(() => [
                    x(g.$slots, "year-overlay-header", { toggle: d })
                  ]),
                  key: "3"
                } : void 0
              ]), 1040, ["aria-label", "modelValue"])
            ]),
            u(l) && g.vertical ? (p(), fe(rn, {
              key: 1,
              "aria-label": (Ne = u(s).ariaLabels) == null ? void 0 : Ne.prevMonth,
              disabled: u(D)(!1),
              onActivate: k[6] || (k[6] = (le) => u(Y)(!1))
            }, {
              default: ie(() => [
                g.$slots["arrow-up"] ? x(g.$slots, "arrow-up", { key: 0 }) : $("", !0),
                g.$slots["arrow-up"] ? $("", !0) : (p(), fe(u(Wn), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : $("", !0),
            u(o) ? (p(), fe(rn, {
              key: 2,
              ref: "rightIcon",
              disabled: u(D)(!0),
              "aria-label": (Xe = u(s).ariaLabels) == null ? void 0 : Xe.nextMonth,
              onActivate: k[7] || (k[7] = (le) => u(Y)(!0)),
              onSetRef: k[8] || (k[8] = (le) => R(le, 3))
            }, {
              default: ie(() => [
                g.$slots[g.vertical ? "arrow-down" : "arrow-right"] ? x(g.$slots, g.vertical ? "arrow-down" : "arrow-right", { key: 0 }) : $("", !0),
                g.$slots[g.vertical ? "arrow-down" : "arrow-right"] ? $("", !0) : (p(), fe(Yn(g.vertical ? u(zn) : u(bn)), { key: 1 }))
              ]),
              _: 3
            }, 8, ["disabled", "aria-label"])) : $("", !0)
          ], 64)) : $("", !0),
          g.monthPicker ? (p(), fe($t, Te({ key: 1 }, u(te)("month"), {
            "skip-active": g.range,
            year: e.year,
            "multi-model-value": u(_),
            "month-picker": "",
            modelValue: u(I),
            "onUpdate:modelValue": k[17] || (k[17] = (le) => ot(I) ? I.value = le : null),
            onToggle: r,
            onSelected: k[18] || (k[18] = (le) => g.$emit("overlay-closed"))
          }), Ye({
            header: ie(() => {
              var le, qe, ze;
              return [
                re("div", Rr, [
                  re("div", {
                    class: "dp__month_year_col_nav",
                    tabindex: "0",
                    ref_key: "mpPrevIconRef",
                    ref: Q,
                    onClick: k[9] || (k[9] = (Re) => H(!1)),
                    onKeydown: k[10] || (k[10] = de((Re) => H(!1), ["enter"]))
                  }, [
                    re("div", {
                      class: ye(["dp__inner_nav", { dp__inner_nav_disabled: u(D)(!1) }]),
                      role: "button",
                      "aria-label": (le = u(s).ariaLabels) == null ? void 0 : le.prevMonth
                    }, [
                      g.$slots["arrow-left"] ? x(g.$slots, "arrow-left", { key: 0 }) : $("", !0),
                      g.$slots["arrow-left"] ? $("", !0) : (p(), fe(u(wn), { key: 1 }))
                    ], 10, Or)
                  ], 544),
                  re("div", {
                    class: "dp__pointer",
                    role: "button",
                    ref_key: "mpYearButtonRef",
                    ref: X,
                    "aria-label": (qe = u(s).ariaLabels) == null ? void 0 : qe.openYearsOverlay,
                    tabindex: "0",
                    onClick: k[11] || (k[11] = () => d(!1)),
                    onKeydown: k[12] || (k[12] = de(() => d(!1), ["enter"]))
                  }, [
                    g.$slots.year ? x(g.$slots, "year", {
                      key: 0,
                      year: e.year
                    }) : $("", !0),
                    g.$slots.year ? $("", !0) : (p(), C(ce, { key: 1 }, [
                      Ke(Ce(e.year), 1)
                    ], 64))
                  ], 40, Ir),
                  re("div", {
                    class: "dp__month_year_col_nav",
                    tabindex: "0",
                    ref_key: "mpNextIconRef",
                    ref: z,
                    onClick: k[13] || (k[13] = (Re) => H(!0)),
                    onKeydown: k[14] || (k[14] = de((Re) => H(!0), ["enter"]))
                  }, [
                    re("div", {
                      class: ye(["dp__inner_nav", { dp__inner_nav_disabled: u(D)(!0) }]),
                      role: "button",
                      "aria-label": (ze = u(s).ariaLabels) == null ? void 0 : ze.nextMonth
                    }, [
                      g.$slots["arrow-right"] ? x(g.$slots, "arrow-right", { key: 0 }) : $("", !0),
                      g.$slots["arrow-right"] ? $("", !0) : (p(), fe(u(bn), { key: 1 }))
                    ], 10, Br)
                  ], 544)
                ]),
                et(gt, {
                  name: u(c)(m.value),
                  css: u(h)
                }, {
                  default: ie(() => [
                    m.value ? (p(), fe($t, Te({ key: 0 }, u(te)("year"), {
                      modelValue: u(V),
                      "onUpdate:modelValue": k[15] || (k[15] = (Re) => ot(V) ? V.value = Re : null),
                      onToggle: d,
                      onSelected: k[16] || (k[16] = (Re) => g.$emit("overlay-closed"))
                    }), Ye({
                      "button-icon": ie(() => [
                        g.$slots["calendar-icon"] ? x(g.$slots, "calendar-icon", { key: 0 }) : $("", !0),
                        g.$slots["calendar-icon"] ? $("", !0) : (p(), fe(u(Lt), { key: 1 }))
                      ]),
                      _: 2
                    }, [
                      g.$slots["year-overlay-value"] ? {
                        name: "item",
                        fn: ie(({ item: Re }) => [
                          x(g.$slots, "year-overlay-value", {
                            text: Re.text,
                            value: Re.value
                          })
                        ]),
                        key: "0"
                      } : void 0
                    ]), 1040, ["modelValue"])) : $("", !0)
                  ]),
                  _: 3
                }, 8, ["name", "css"])
              ];
            }),
            _: 2
          }, [
            g.$slots["month-overlay-value"] ? {
              name: "item",
              fn: ie(({ item: le }) => [
                x(g.$slots, "month-overlay-value", {
                  text: le.text,
                  value: le.value
                })
              ]),
              key: "0"
            } : void 0
          ]), 1040, ["skip-active", "year", "multi-model-value", "modelValue"])) : $("", !0),
          g.yearPicker ? (p(), fe($t, Te({ key: 2 }, u(te)("year"), {
            modelValue: u(V),
            "onUpdate:modelValue": k[19] || (k[19] = (le) => ot(V) ? V.value = le : null),
            "multi-model-value": u(_),
            "skip-active": g.range,
            "skip-button-ref": "",
            "year-picker": "",
            onToggle: d,
            onSelected: k[20] || (k[20] = (le) => g.$emit("overlay-closed"))
          }), Ye({ _: 2 }, [
            g.$slots["year-overlay-value"] ? {
              name: "item",
              fn: ie(({ item: le }) => [
                x(g.$slots, "year-overlay-value", {
                  text: le.text,
                  value: le.value
                })
              ]),
              key: "0"
            } : void 0
          ]), 1040, ["modelValue", "multi-model-value", "skip-active"])) : $("", !0)
        ], 64))
      ]);
    };
  }
}), Vr = {
  key: 0,
  class: "dp__time_input"
}, Er = ["aria-label", "onKeydown", "onClick"], Fr = ["aria-label", "data-test", "onKeydown", "onClick"], Lr = ["aria-label", "onKeydown", "onClick"], Ur = { key: 0 }, Hr = ["aria-label", "onKeydown"], Wr = /* @__PURE__ */ We({
  __name: "TimeInput",
  props: {
    hours: { type: Number, default: 0 },
    minutes: { type: Number, default: 0 },
    seconds: { type: Number, default: 0 },
    closeTimePickerBtn: { type: Object, default: null },
    order: { type: Number, default: 0 },
    ...at
  },
  emits: [
    "set-hours",
    "set-minutes",
    "update:hours",
    "update:minutes",
    "update:seconds",
    "reset-flow",
    "mounted",
    "overlay-closed"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { setTimePickerElements: s, setTimePickerBackRef: c } = nt(), { defaults: h } = Ve(t), { transitionName: P, showTransition: Y } = Ut(h.value.transitions), D = Tt({
      hours: !1,
      minutes: !1,
      seconds: !1
    }), L = W("AM"), M = W(null), m = W([]);
    He(() => {
      a("mounted");
    });
    const T = F(() => (l) => !!(t.maxTime && t.maxTime[l] && t.maxTime[l] < t[l] + +t[`${l}Increment`])), Q = F(() => (l) => !!(t.minTime && t.minTime[l] && t.minTime[l] > t[l] - +t[`${l}Increment`])), X = (l, o) => Un(Se(b(), l), o), z = (l, o) => ca(Se(b(), l), o), O = F(
      () => ({
        dp__time_col: !0,
        dp__time_col_reg: !t.enableSeconds && t.is24,
        dp__time_col_reg_with_button: !t.enableSeconds && !t.is24,
        dp__time_col_sec: t.enableSeconds && t.is24,
        dp__time_col_sec_with_button: t.enableSeconds && !t.is24
      })
    ), I = F(() => {
      const l = [{ type: "hours" }, { type: "", separator: !0 }, { type: "minutes" }];
      return t.enableSeconds ? l.concat([{ type: "", separator: !0 }, { type: "seconds" }]) : l;
    }), V = F(() => I.value.filter((l) => !l.separator)), J = F(() => (l) => {
      if (l === "hours") {
        const o = _(t.hours);
        return { text: o < 10 ? `0${o}` : `${o}`, value: o };
      }
      return { text: t[l] < 10 ? `0${t[l]}` : `${t[l]}`, value: t[l] };
    }), G = (l) => {
      const o = t.is24 ? 24 : 12, r = l === "hours" ? o : 60, d = +t[`${l}GridIncrement`], A = l === "hours" && !t.is24 ? d : 0, H = [];
      for (let R = A; R < r; R += d)
        H.push({ value: R, text: R < 10 ? `0${R}` : `${R}` });
      return l === "hours" && !t.is24 && H.push({ value: 0, text: "12" }), Ua(H);
    }, te = (l, o) => {
      const r = t.minTime && t.minTime[o], d = t.maxTime && t.maxTime[o];
      return r && d ? l < r || l > d : r ? l < r : d ? l > d : !1;
    }, se = F(() => (l) => G(l).flat().filter((r) => r).map((r) => r.value).filter((r) => te(r, l))), S = (l) => t[`no${l[0].toUpperCase() + l.slice(1)}Overlay`], E = (l) => {
      S(l) || (D[l] = !D[l], D[l] || a("overlay-closed"));
    }, U = (l) => l === "hours" ? je : l === "minutes" ? Ge : yt, f = (l, o = !0) => {
      const r = o ? X : z;
      (o ? T.value(l) : Q.value(l)) || a(
        `update:${l}`,
        U(l)(r({ [l]: +t[l] }, { [l]: +t[`${l}Increment`] }))
      );
    }, _ = (l) => t.is24 ? l : (l >= 12 ? L.value = "PM" : L.value = "AM", Ka(l)), K = () => {
      L.value === "PM" ? (L.value = "AM", a("update:hours", t.hours - 12)) : (L.value = "PM", a("update:hours", t.hours + 12));
    }, oe = (l) => {
      D[l] = !0;
    }, ee = (l, o, r) => {
      if (l && t.arrowNavigation) {
        Array.isArray(m.value[o]) ? m.value[o][r] = l : m.value[o] = [l];
        const d = m.value.reduce(
          (A, H) => H.map((R, g) => [...A[g] || [], H[g]]),
          []
        );
        c(t.closeTimePickerBtn), M.value && (d[1] = d[1].concat(M.value)), s(d, t.order);
      }
    }, N = (l, o) => l === "hours" && !t.is24 ? a(`update:${l}`, L.value === "PM" ? o + 12 : o) : a(`update:${l}`, o);
    return n({ openChildCmp: oe }), (l, o) => {
      var r;
      return l.disabled ? $("", !0) : (p(), C("div", Vr, [
        (p(!0), C(ce, null, De(u(I), (d, A) => {
          var H, R, g;
          return p(), C("div", {
            key: A,
            class: ye(u(O))
          }, [
            d.separator ? (p(), C(ce, { key: 0 }, [
              Ke(" : ")
            ], 64)) : (p(), C(ce, { key: 1 }, [
              re("div", {
                class: ye({
                  dp__inc_dec_button: !0,
                  dp__inc_dec_button_disabled: u(T)(d.type)
                }),
                role: "button",
                "data-test": "time-inc-btn",
                "aria-label": (H = u(h).ariaLabels) == null ? void 0 : H.incrementValue(d.type),
                tabindex: "0",
                onKeydown: [
                  de((k) => f(d.type), ["enter"]),
                  de((k) => f(d.type), ["space"])
                ],
                onClick: (k) => f(d.type),
                ref_for: !0,
                ref: (k) => ee(k, A, 0)
              }, [
                l.$slots["arrow-up"] ? x(l.$slots, "arrow-up", { key: 0 }) : $("", !0),
                l.$slots["arrow-up"] ? $("", !0) : (p(), fe(u(Wn), { key: 1 }))
              ], 42, Er),
              re("div", {
                role: "button",
                "aria-label": (R = u(h).ariaLabels) == null ? void 0 : R.openTpOverlay(d.type),
                class: ye(S(d.type) ? "" : "dp__time_display"),
                tabindex: "0",
                "data-test": `${d.type}-toggle-overlay-btn`,
                onKeydown: [
                  de((k) => E(d.type), ["enter"]),
                  de((k) => E(d.type), ["space"])
                ],
                onClick: (k) => E(d.type),
                ref_for: !0,
                ref: (k) => ee(k, A, 1)
              }, [
                l.$slots[d.type] ? x(l.$slots, d.type, {
                  key: 0,
                  text: u(J)(d.type).text,
                  value: u(J)(d.type).value
                }) : $("", !0),
                l.$slots[d.type] ? $("", !0) : (p(), C(ce, { key: 1 }, [
                  Ke(Ce(u(J)(d.type).text), 1)
                ], 64))
              ], 42, Fr),
              re("div", {
                class: ye({
                  dp__inc_dec_button: !0,
                  dp__inc_dec_button_disabled: u(Q)(d.type)
                }),
                role: "button",
                "data-test": "time-dec-btn",
                "aria-label": (g = u(h).ariaLabels) == null ? void 0 : g.decrementValue(d.type),
                tabindex: "0",
                onKeydown: [
                  de((k) => f(d.type, !1), ["enter"]),
                  de((k) => f(d.type, !1), ["space"])
                ],
                onClick: (k) => f(d.type, !1),
                ref_for: !0,
                ref: (k) => ee(k, A, 2)
              }, [
                l.$slots["arrow-down"] ? x(l.$slots, "arrow-down", { key: 0 }) : $("", !0),
                l.$slots["arrow-down"] ? $("", !0) : (p(), fe(u(zn), { key: 1 }))
              ], 42, Lr)
            ], 64))
          ], 2);
        }), 128)),
        l.is24 ? $("", !0) : (p(), C("div", Ur, [
          l.$slots["am-pm-button"] ? x(l.$slots, "am-pm-button", {
            key: 0,
            toggle: K,
            value: L.value
          }) : $("", !0),
          l.$slots["am-pm-button"] ? $("", !0) : (p(), C("button", {
            key: 1,
            ref_key: "amPmButton",
            ref: M,
            type: "button",
            class: "dp__pm_am_button",
            role: "button",
            "aria-label": (r = u(h).ariaLabels) == null ? void 0 : r.amPmButton,
            tabindex: "0",
            onClick: K,
            onKeydown: [
              de(Ze(K, ["prevent"]), ["enter"]),
              de(Ze(K, ["prevent"]), ["space"])
            ]
          }, Ce(L.value), 41, Hr))
        ])),
        (p(!0), C(ce, null, De(u(V), (d, A) => (p(), fe(gt, {
          key: A,
          name: u(P)(D[d.type]),
          css: u(Y)
        }, {
          default: ie(() => [
            D[d.type] ? (p(), fe($t, {
              key: 0,
              items: G(d.type),
              "disabled-values": u(h).filters.times[d.type].concat(u(se)(d.type)),
              "esc-close": l.escClose,
              "aria-labels": u(h).ariaLabels,
              "hide-navigation": l.hideNavigation,
              "onUpdate:modelValue": (H) => N(d.type, H),
              onSelected: (H) => E(d.type),
              onToggle: (H) => E(d.type),
              onResetFlow: o[0] || (o[0] = (H) => l.$emit("reset-flow")),
              type: d.type
            }, Ye({
              "button-icon": ie(() => [
                l.$slots["clock-icon"] ? x(l.$slots, "clock-icon", { key: 0 }) : $("", !0),
                l.$slots["clock-icon"] ? $("", !0) : (p(), fe(u(Hn), { key: 1 }))
              ]),
              _: 2
            }, [
              l.$slots[`${d.type}-overlay-value`] ? {
                name: "item",
                fn: ie(({ item: H }) => [
                  x(l.$slots, `${d.type}-overlay-value`, {
                    text: H.text,
                    value: H.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "disabled-values", "esc-close", "aria-labels", "hide-navigation", "onUpdate:modelValue", "onSelected", "onToggle", "type"])) : $("", !0)
          ]),
          _: 2
        }, 1032, ["name", "css"]))), 128))
      ]));
    };
  }
}), zr = ["aria-label"], Kr = { class: "dp__overlay_container dp__container_flex dp__time_picker_overlay_container" }, xr = {
  key: 1,
  class: "dp__overlay_row"
}, jr = ["aria-label"], Gr = /* @__PURE__ */ We({
  __name: "TimePicker",
  props: {
    hours: { type: [Number, Array], default: 0 },
    minutes: { type: [Number, Array], default: 0 },
    seconds: { type: [Number, Array], default: 0 },
    internalModelValue: { type: [Date, Array], default: null },
    ...at
  },
  emits: [
    "update:hours",
    "update:minutes",
    "update:seconds",
    "mount",
    "reset-flow",
    "overlay-opened",
    "overlay-closed"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { buildMatrix: s, setTimePicker: c } = nt(), h = cn(), { hideNavigationButtons: P, defaults: Y } = Ve(t), { transitionName: D, showTransition: L } = Ut(Y.value.transitions), M = W(null), m = W(null), T = W([]), Q = W(null);
    He(() => {
      a("mount"), !t.timePicker && t.arrowNavigation ? s([$e(M.value)], "time") : c(!0, t.timePicker);
    });
    const X = F(() => t.range && t.modelAuto ? Zn(t.internalModelValue) : !0), z = W(!1), O = (f) => ({
      hours: Array.isArray(t.hours) ? t.hours[f] : t.hours,
      minutes: Array.isArray(t.minutes) ? t.minutes[f] : t.minutes,
      seconds: Array.isArray(t.seconds) ? t.seconds[f] : t.seconds
    }), I = F(() => {
      const f = [];
      if (t.range)
        for (let _ = 0; _ < 2; _++)
          f.push(O(_));
      else
        f.push(O(0));
      return f;
    }), V = (f, _ = !1, K = "") => {
      _ || a("reset-flow"), z.value = f, f && a("overlay-opened"), t.arrowNavigation && (c(f), f || a("overlay-closed")), dt(() => {
        K !== "" && T.value[0] && T.value[0].openChildCmp(K);
      });
    }, J = F(() => ({
      dp__button: !0,
      dp__button_bottom: t.autoApply
    })), G = it(h, "timePicker"), te = (f, _, K) => t.range ? _ === 0 ? [f, I.value[1][K]] : [I.value[0][K], f] : f, se = (f) => {
      a("update:hours", f);
    }, S = (f) => {
      a("update:minutes", f);
    }, E = (f) => {
      a("update:seconds", f);
    }, U = () => {
      Q.value && t.arrowNavigation && Q.value.focus({ preventScroll: !0 });
    };
    return n({ toggleTimePicker: V }), (f, _) => {
      var K;
      return p(), C("div", null, [
        f.timePicker ? $("", !0) : _t((p(), C("div", {
          key: 0,
          class: ye(u(J)),
          role: "button",
          "aria-label": (K = u(Y).ariaLabels) == null ? void 0 : K.openTimePicker,
          tabindex: "0",
          "data-test": "open-time-picker-btn",
          ref_key: "openTimePickerBtn",
          ref: M,
          onKeydown: [
            _[0] || (_[0] = de((oe) => V(!0), ["enter"])),
            _[1] || (_[1] = de((oe) => V(!0), ["space"]))
          ],
          onClick: _[2] || (_[2] = (oe) => V(!0))
        }, [
          f.$slots["clock-icon"] ? x(f.$slots, "clock-icon", { key: 0 }) : $("", !0),
          f.$slots["clock-icon"] ? $("", !0) : (p(), fe(u(Hn), { key: 1 }))
        ], 42, zr)), [
          [Nt, !u(P)("time")]
        ]),
        et(gt, {
          name: u(D)(z.value),
          css: u(L)
        }, {
          default: ie(() => {
            var oe;
            return [
              z.value || f.timePicker ? (p(), C("div", {
                key: 0,
                class: "dp__overlay",
                ref_key: "overlayRef",
                ref: Q,
                tabindex: "0"
              }, [
                re("div", Kr, [
                  f.$slots["time-picker-overlay"] ? x(f.$slots, "time-picker-overlay", {
                    key: 0,
                    hours: e.hours,
                    minutes: e.minutes,
                    seconds: e.seconds,
                    setHours: se,
                    setMinutes: S,
                    setSeconds: E
                  }) : $("", !0),
                  f.$slots["time-picker-overlay"] ? $("", !0) : (p(), C("div", xr, [
                    (p(!0), C(ce, null, De(u(I), (ee, N) => _t((p(), fe(Wr, Te({ key: N }, {
                      ...f.$props,
                      order: N,
                      hours: ee.hours,
                      minutes: ee.minutes,
                      seconds: ee.seconds,
                      closeTimePickerBtn: m.value,
                      disabled: N === 0 ? f.fixedStart : f.fixedEnd
                    }, {
                      ref_for: !0,
                      ref_key: "timeInputRefs",
                      ref: T,
                      "onUpdate:hours": (l) => se(te(l, N, "hours")),
                      "onUpdate:minutes": (l) => S(te(l, N, "minutes")),
                      "onUpdate:seconds": (l) => E(te(l, N, "seconds")),
                      onMounted: U,
                      onOverlayClosed: U
                    }), Ye({ _: 2 }, [
                      De(u(G), (l, o) => ({
                        name: l,
                        fn: ie((r) => [
                          x(f.$slots, l, Pe(Le(r)))
                        ])
                      }))
                    ]), 1040, ["onUpdate:hours", "onUpdate:minutes", "onUpdate:seconds"])), [
                      [Nt, N === 0 ? !0 : u(X)]
                    ])), 128))
                  ])),
                  f.timePicker ? $("", !0) : _t((p(), C("div", {
                    key: 2,
                    ref_key: "closeTimePickerBtn",
                    ref: m,
                    class: ye(u(J)),
                    role: "button",
                    "aria-label": (oe = u(Y).ariaLabels) == null ? void 0 : oe.closeTimePicker,
                    tabindex: "0",
                    onKeydown: [
                      _[3] || (_[3] = de((ee) => V(!1), ["enter"])),
                      _[4] || (_[4] = de((ee) => V(!1), ["space"]))
                    ],
                    onClick: _[5] || (_[5] = (ee) => V(!1))
                  }, [
                    f.$slots["calendar-icon"] ? x(f.$slots, "calendar-icon", { key: 0 }) : $("", !0),
                    f.$slots["calendar-icon"] ? $("", !0) : (p(), fe(u(Lt), { key: 1 }))
                  ], 42, jr)), [
                    [Nt, !u(P)("time")]
                  ])
                ])
              ], 512)) : $("", !0)
            ];
          }),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), Zr = (e, n) => {
  const { isDisabled: a, matchDate: t, getWeekFromDate: s } = Ve(n), c = W(null), h = W(b()), P = (r) => {
    !r.current && n.hideOffsetDates || (c.value = r.value);
  }, Y = () => {
    c.value = null;
  }, D = (r) => Array.isArray(e.value) && n.range && e.value[0] && c.value ? r ? Be(c.value, e.value[0]) : _e(c.value, e.value[0]) : !0, L = (r, d) => {
    const A = () => e.value ? d ? e.value[0] || null : e.value[1] : null, H = e.value && Array.isArray(e.value) ? A() : null;
    return me(b(r.value), H);
  }, M = (r) => {
    const d = Array.isArray(e.value) ? e.value[0] : null;
    return r ? !_e(c.value || null, d) : !0;
  }, m = (r, d = !0) => (n.range || n.weekPicker) && Array.isArray(e.value) ? n.hideOffsetDates && !r.current ? !1 : me(b(r.value), e.value[d ? 0 : 1]) : n.range ? L(r, d) && M(d) || me(r.value, Array.isArray(e.value) ? e.value[0] : null) && D(d) : !1, T = (r, d, A) => Array.isArray(e.value) && e.value[0] && e.value.length === 1 ? r ? !1 : A ? Be(e.value[0], d.value) : _e(e.value[0], d.value) : !1, Q = (r) => !e.value || n.hideOffsetDates && !r.current ? !1 : n.range ? n.modelAuto && Array.isArray(e.value) ? me(r.value, e.value[0] ? e.value[0] : h.value) : !1 : n.multiDates && Array.isArray(e.value) ? e.value.some((d) => me(d, r.value)) : me(r.value, e.value ? e.value : h.value), X = (r) => {
    if (n.autoRange || n.weekPicker) {
      if (c.value) {
        if (n.hideOffsetDates && !r.current)
          return !1;
        const d = mt(c.value, +n.autoRange), A = s(b(c.value));
        return n.weekPicker ? me(A[1], b(r.value)) : me(d, b(r.value));
      }
      return !1;
    }
    return !1;
  }, z = (r) => {
    if (n.autoRange || n.weekPicker) {
      if (c.value) {
        const d = mt(c.value, +n.autoRange);
        if (n.hideOffsetDates && !r.current)
          return !1;
        const A = s(b(c.value));
        return n.weekPicker ? Be(r.value, A[0]) && _e(r.value, A[1]) : Be(r.value, c.value) && _e(r.value, d);
      }
      return !1;
    }
    return !1;
  }, O = (r) => {
    if (n.autoRange || n.weekPicker) {
      if (c.value) {
        if (n.hideOffsetDates && !r.current)
          return !1;
        const d = s(b(c.value));
        return n.weekPicker ? me(d[0], r.value) : me(c.value, r.value);
      }
      return !1;
    }
    return !1;
  }, I = (r) => Kn(e.value, c.value, r.value), V = () => n.modelAuto && Array.isArray(n.internalModelValue) ? !!n.internalModelValue[0] : !1, J = () => n.modelAuto ? Zn(n.internalModelValue) : !0, G = (r) => {
    if (Array.isArray(e.value) && e.value.length || n.weekPicker)
      return !1;
    const d = n.range ? !m(r) && !m(r, !1) : !0;
    return !a(r.value) && !Q(r) && !(!r.current && n.hideOffsetDates) && d;
  }, te = (r) => n.range ? n.modelAuto ? V() && Q(r) : !1 : Q(r), se = (r) => n.highlight ? t(r.value, n.highlight) : !1, S = (r) => a(r.value) && n.highlightDisabledDays === !1, E = (r) => n.highlightWeekDays && n.highlightWeekDays.includes(r.value.getDay()), U = (r) => (n.range || n.weekPicker) && (!(n.multiCalendars > 0) || r.current) && J() && !(!r.current && n.hideOffsetDates) && !Q(r) ? I(r) : !1, f = (r) => {
    const { isRangeStart: d, isRangeEnd: A } = oe(r), H = n.range ? d || A : !1;
    return {
      dp__cell_offset: !r.current,
      dp__pointer: !n.disabled && !(!r.current && n.hideOffsetDates) && !a(r.value),
      dp__cell_disabled: a(r.value),
      dp__cell_highlight: !S(r) && (se(r) || E(r)) && !te(r) && !H,
      dp__cell_highlight_active: !S(r) && (se(r) || E(r)) && te(r),
      dp__today: !n.noToday && me(r.value, h.value) && r.current
    };
  }, _ = (r) => ({
    dp__active_date: te(r),
    dp__date_hover: G(r)
  }), K = (r) => ({
    ...ee(r),
    ...N(r),
    dp__range_between_week: U(r) && n.weekPicker
  }), oe = (r) => {
    const d = n.multiCalendars > 0 ? r.current && m(r) && J() : m(r) && J(), A = n.multiCalendars > 0 ? r.current && m(r, !1) && J() : m(r, !1) && J();
    return { isRangeStart: d, isRangeEnd: A };
  }, ee = (r) => {
    const { isRangeStart: d, isRangeEnd: A } = oe(r);
    return {
      dp__range_start: d,
      dp__range_end: A,
      dp__range_between: U(r) && !n.weekPicker,
      dp__date_hover_start: T(G(r), r, !0),
      dp__date_hover_end: T(G(r), r, !1)
    };
  }, N = (r) => ({
    ...ee(r),
    dp__cell_auto_range: z(r),
    dp__cell_auto_range_start: O(r),
    dp__cell_auto_range_end: X(r)
  }), l = (r) => n.range ? n.autoRange ? N(r) : n.modelAuto ? { ..._(r), ...ee(r) } : ee(r) : n.weekPicker ? K(r) : _(r);
  return {
    setHoverDate: P,
    clearHoverDate: Y,
    getDayClassData: (r) => ({
      ...f(r),
      ...l(r),
      [n.dayClass ? n.dayClass(r.value) : ""]: !0,
      [n.calendarCellClassName]: !!n.calendarCellClassName
    })
  };
}, Xr = ["id", "onKeydown"], qr = {
  key: 0,
  class: "dp__sidebar_left"
}, Jr = {
  key: 1,
  class: "dp__preset_ranges"
}, Qr = ["onClick"], el = {
  key: 2,
  class: "dp__sidebar_right"
}, tl = {
  key: 3,
  class: "dp__now_wrap"
}, nl = /* @__PURE__ */ We({
  __name: "DatepickerMenu",
  props: {
    openOnTop: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    ...at
  },
  emits: [
    "close-picker",
    "select-date",
    "auto-apply",
    "time-update",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "update:internal-model-value",
    "recalculate-position",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { setMenuFocused: s, setShiftKey: c, control: h } = xn(), { getCalendarDays: P, defaults: Y } = Ve(t), D = cn(), L = W(null), M = Tt({
      timePicker: !!(!t.enableTimePicker || t.timePicker || t.monthPicker),
      monthYearInput: !!t.timePicker,
      calendar: !1
    }), m = W([]), T = W([]), Q = W(null), X = W(null), z = W(0), O = W(!1), I = W(0);
    He(() => {
      var B;
      O.value = !0, !((B = t.presetRanges) != null && B.length) && !D["left-sidebar"] && !D["right-sidebar"] && ae();
      const v = $e(X);
      if (v && !t.textInput && !t.inline && (s(!0), S()), v) {
        const we = (be) => {
          ["action-row", "time-picker", "month-year"].some(
            (xe) => Object.keys(D).includes(xe)
          ) || be.preventDefault(), be.stopImmediatePropagation(), be.stopPropagation();
        };
        v.addEventListener("pointerdown", we), v.addEventListener("mousedown", we);
      }
      window.addEventListener("resize", ae);
    }), dn(() => {
      window.removeEventListener("resize", ae);
    });
    const { arrowRight: V, arrowLeft: J, arrowDown: G, arrowUp: te } = nt(), se = (v) => {
      v || v === 0 ? T.value[v].triggerTransition(
        K.value(v),
        oe.value(v)
      ) : T.value.forEach(
        (B, we) => B.triggerTransition(K.value(we), oe.value(we))
      );
    }, S = () => {
      const v = $e(X);
      v && v.focus({ preventScroll: !0 });
    }, E = () => {
      var v;
      (v = t.flow) != null && v.length && I.value !== -1 && (I.value += 1, a("flow-step", I.value), Gt());
    }, U = () => {
      I.value = -1;
    }, {
      calendars: f,
      modelValue: _,
      month: K,
      year: oe,
      time: ee,
      updateTime: N,
      updateMonthYear: l,
      selectDate: o,
      getWeekNum: r,
      monthYearSelect: d,
      handleScroll: A,
      handleArrow: H,
      handleSwipe: R,
      getMarker: g,
      selectCurrentDate: k,
      presetDateRange: y
    } = Qa(t, a, E, se, I), { setHoverDate: j, clearHoverDate: ne, getDayClassData: Ne } = Zr(_, t);
    tt(
      f,
      () => {
        t.openOnTop && setTimeout(() => {
          a("recalculate-position");
        }, 0);
      },
      { deep: !0 }
    );
    const Xe = it(D, "calendar"), le = it(D, "action"), qe = it(D, "timePicker"), ze = it(D, "monthYear"), Re = F(() => t.openOnTop ? "dp__arrow_bottom" : "dp__arrow_top"), rt = F(() => Wa(t.yearRange, t.reverseYears)), ht = F(() => za(t.locale, t.monthNameFormat)), ae = () => {
      const v = $e(L);
      v && (z.value = v.getBoundingClientRect().width);
    }, ge = F(() => (v) => P(K.value(v), oe.value(v))), ve = F(
      () => Y.value.multiCalendars > 0 && t.range ? [...Array(Y.value.multiCalendars).keys()] : [0]
    ), Fe = F(
      () => (v) => v === 1
    ), Je = F(() => t.monthPicker || t.timePicker || t.yearPicker), Ht = F(
      () => ({
        dp__flex_display: Y.value.multiCalendars > 0
      })
    ), Wt = F(() => ({
      dp__instance_calendar: Y.value.multiCalendars > 0
    })), zt = F(() => ({
      dp__menu_disabled: t.disabled,
      dp__menu_readonly: t.readonly
    })), At = F(
      () => (v) => Kt(ge, v)
    ), pt = F(
      () => ({
        dp__menu: !0,
        dp__menu_index: !t.inline,
        dp__relative: t.inline,
        [t.menuClassName]: !!t.menuClassName
      })
    ), Kt = (v, B) => v.value(B).map((we) => ({
      ...we,
      days: we.days.map((be) => (be.marker = g(be), be.classData = Ne(be), be))
    })), xt = (v) => {
      v.stopPropagation(), v.stopImmediatePropagation();
    }, jt = () => {
      t.escClose && a("close-picker");
    }, St = (v, B = !1) => {
      o(v, B), t.spaceConfirm && a("select-date");
    }, Ct = (v) => {
      var B;
      (B = t.flow) != null && B.length && (M[v] = !0, Object.keys(M).filter((we) => !M[we]).length || Gt());
    }, ct = (v, B, we, be, ...xe) => {
      if (t.flow[I.value] === v) {
        const Z = be ? B.value[0] : B.value;
        Z && Z[we](...xe);
      }
    }, Gt = () => {
      ct("month", m, "toggleMonthPicker", !0, !0), ct("year", m, "toggleYearPicker", !0, !0), ct("calendar", Q, "toggleTimePicker", !1, !1, !0), ct("time", Q, "toggleTimePicker", !1, !0, !0);
      const v = t.flow[I.value];
      (v === "hours" || v === "minutes" || v === "seconds") && ct(v, Q, "toggleTimePicker", !1, !0, !0, v);
    }, i = (v) => {
      if (t.arrowNavigation) {
        if (v === "up")
          return te();
        if (v === "down")
          return G();
        if (v === "left")
          return J();
        if (v === "right")
          return V();
      } else
        v === "left" || v === "up" ? H("left", 0, v === "up") : H("right", 0, v === "down");
    }, w = (v) => {
      c(v.shiftKey), !t.disableMonthYearSelect && v.code === "Tab" && v.target.classList.contains("dp__menu") && h.value.shiftKeyInMenu && (v.preventDefault(), v.stopImmediatePropagation(), a("close-picker"));
    }, q = (v) => {
      m.value[0] && m.value[0].handleMonthYearChange(v);
    };
    return n({
      updateMonthYear: l
    }), (v, B) => {
      var we;
      return p(), fe(gt, {
        appear: "",
        name: (we = u(Y).transitions) == null ? void 0 : we.menuAppear,
        mode: "out-in",
        css: !!v.transitions
      }, {
        default: ie(() => {
          var be, xe;
          return [
            re("div", {
              id: v.uid ? `dp-menu-${v.uid}` : void 0,
              tabindex: "0",
              ref_key: "dpMenuRef",
              ref: X,
              role: "dialog",
              class: ye(u(pt)),
              onMouseleave: B[15] || (B[15] = //@ts-ignore
              (...Z) => u(ne) && u(ne)(...Z)),
              onClick: xt,
              onKeydown: [
                de(jt, ["esc"]),
                B[16] || (B[16] = de(Ze((Z) => i("left"), ["prevent"]), ["left"])),
                B[17] || (B[17] = de(Ze((Z) => i("up"), ["prevent"]), ["up"])),
                B[18] || (B[18] = de(Ze((Z) => i("down"), ["prevent"]), ["down"])),
                B[19] || (B[19] = de(Ze((Z) => i("right"), ["prevent"]), ["right"])),
                w
              ]
            }, [
              (v.disabled || v.readonly) && v.inline ? (p(), C("div", {
                key: 0,
                class: ye(u(zt))
              }, null, 2)) : $("", !0),
              !v.inline && !v.teleportCenter ? (p(), C("div", {
                key: 1,
                class: ye(u(Re))
              }, null, 2)) : $("", !0),
              re("div", {
                class: ye({
                  dp__menu_content_wrapper: ((be = v.presetRanges) == null ? void 0 : be.length) || !!v.$slots["left-sidebar"] || !!v.$slots["right-sidebar"]
                })
              }, [
                v.$slots["left-sidebar"] ? (p(), C("div", qr, [
                  x(v.$slots, "left-sidebar", Pe(Le({ handleMonthYearChange: q })))
                ])) : $("", !0),
                (xe = v.presetRanges) != null && xe.length ? (p(), C("div", Jr, [
                  (p(!0), C(ce, null, De(v.presetRanges, (Z, ft) => (p(), C("div", {
                    key: ft,
                    style: Qe(Z.style || {}),
                    class: "dp__preset_range",
                    onClick: (ue) => u(y)(Z.range, !!Z.slot)
                  }, [
                    Z.slot ? x(v.$slots, Z.slot, {
                      key: 0,
                      presetDateRange: u(y),
                      label: Z.label,
                      range: Z.range
                    }) : (p(), C(ce, { key: 1 }, [
                      Ke(Ce(Z.label), 1)
                    ], 64))
                  ], 12, Qr))), 128))
                ])) : $("", !0),
                re("div", {
                  class: "dp__instance_calendar",
                  ref_key: "calendarWrapperRef",
                  ref: L,
                  role: "document"
                }, [
                  re("div", {
                    class: ye(u(Ht))
                  }, [
                    (p(!0), C(ce, null, De(u(ve), (Z, ft) => (p(), C("div", {
                      key: Z,
                      class: ye(u(Wt))
                    }, [
                      !v.disableMonthYearSelect && !v.timePicker ? (p(), fe(Yr, Te({
                        key: 0,
                        ref_for: !0,
                        ref: (ue) => {
                          ue && (m.value[ft] = ue);
                        },
                        months: u(ht),
                        years: u(rt),
                        month: u(K)(Z),
                        year: u(oe)(Z),
                        instance: Z,
                        "internal-model-value": e.internalModelValue
                      }, v.$props, {
                        onMount: B[0] || (B[0] = (ue) => Ct("monthYearInput")),
                        onResetFlow: U,
                        onUpdateMonthYear: (ue) => u(l)(Z, ue),
                        onMonthYearSelect: u(d),
                        onOverlayClosed: S
                      }), Ye({ _: 2 }, [
                        De(u(ze), (ue, qn) => ({
                          name: ue,
                          fn: ie((Zt) => [
                            x(v.$slots, ue, Pe(Le(Zt)))
                          ])
                        }))
                      ]), 1040, ["months", "years", "month", "year", "instance", "internal-model-value", "onUpdateMonthYear", "onMonthYearSelect"])) : $("", !0),
                      et($r, Te({
                        ref_for: !0,
                        ref: (ue) => {
                          ue && (T.value[ft] = ue);
                        },
                        "specific-mode": u(Je),
                        "get-week-num": u(r),
                        instance: Z,
                        "mapped-dates": u(At)(Z),
                        month: u(K)(Z),
                        year: u(oe)(Z)
                      }, v.$props, {
                        "flow-step": I.value,
                        "onUpdate:flowStep": B[1] || (B[1] = (ue) => I.value = ue),
                        onSelectDate: (ue) => u(o)(ue, !u(Fe)(Z)),
                        onHandleSpace: (ue) => St(ue, !u(Fe)(Z)),
                        onSetHoverDate: B[2] || (B[2] = (ue) => u(j)(ue)),
                        onHandleScroll: (ue) => u(A)(ue, Z),
                        onHandleSwipe: (ue) => u(R)(ue, Z),
                        onMount: B[3] || (B[3] = (ue) => Ct("calendar")),
                        onResetFlow: U,
                        onTooltipOpen: B[4] || (B[4] = (ue) => v.$emit("tooltip-open", ue)),
                        onTooltipClose: B[5] || (B[5] = (ue) => v.$emit("tooltip-close", ue))
                      }), Ye({ _: 2 }, [
                        De(u(Xe), (ue, qn) => ({
                          name: ue,
                          fn: ie((Zt) => [
                            x(v.$slots, ue, Pe(Le({ ...Zt })))
                          ])
                        }))
                      ]), 1040, ["specific-mode", "get-week-num", "instance", "mapped-dates", "month", "year", "flow-step", "onSelectDate", "onHandleSpace", "onHandleScroll", "onHandleSwipe"])
                    ], 2))), 128))
                  ], 2),
                  re("div", null, [
                    v.$slots["time-picker"] ? x(v.$slots, "time-picker", Pe(Te({ key: 0 }, { time: u(ee), updateTime: u(N) }))) : (p(), C(ce, { key: 1 }, [
                      v.enableTimePicker && !v.monthPicker && !v.weekPicker ? (p(), fe(Gr, Te({
                        key: 0,
                        ref_key: "timePickerRef",
                        ref: Q,
                        hours: u(ee).hours,
                        minutes: u(ee).minutes,
                        seconds: u(ee).seconds,
                        "internal-model-value": e.internalModelValue
                      }, v.$props, {
                        onMount: B[6] || (B[6] = (Z) => Ct("timePicker")),
                        "onUpdate:hours": B[7] || (B[7] = (Z) => u(N)(Z)),
                        "onUpdate:minutes": B[8] || (B[8] = (Z) => u(N)(Z, !1)),
                        "onUpdate:seconds": B[9] || (B[9] = (Z) => u(N)(Z, !1, !0)),
                        onResetFlow: U,
                        onOverlayClosed: S,
                        onOverlayOpened: B[10] || (B[10] = (Z) => v.$emit("time-picker-open", Z))
                      }), Ye({ _: 2 }, [
                        De(u(qe), (Z, ft) => ({
                          name: Z,
                          fn: ie((ue) => [
                            x(v.$slots, Z, Pe(Le(ue)))
                          ])
                        }))
                      ]), 1040, ["hours", "minutes", "seconds", "internal-model-value"])) : $("", !0)
                    ], 64))
                  ])
                ], 512),
                v.$slots["right-sidebar"] ? (p(), C("div", el, [
                  x(v.$slots, "right-sidebar", Pe(Le({ handleMonthYearChange: q })))
                ])) : $("", !0),
                v.showNowButton ? (p(), C("div", tl, [
                  v.$slots["now-button"] ? x(v.$slots, "now-button", {
                    key: 0,
                    selectCurrentDate: u(k)
                  }) : $("", !0),
                  v.$slots["now-button"] ? $("", !0) : (p(), C("button", {
                    key: 1,
                    type: "button",
                    role: "button",
                    class: "dp__now_button",
                    onClick: B[11] || (B[11] = //@ts-ignore
                    (...Z) => u(k) && u(k)(...Z))
                  }, Ce(v.nowButtonLabel), 1))
                ])) : $("", !0)
              ], 2),
              !v.autoApply || v.keepActionRow ? (p(), fe(mr, Te({
                key: 2,
                "menu-mount": O.value,
                "calendar-width": z.value,
                "internal-model-value": e.internalModelValue
              }, v.$props, {
                onClosePicker: B[12] || (B[12] = (Z) => v.$emit("close-picker")),
                onSelectDate: B[13] || (B[13] = (Z) => v.$emit("select-date")),
                onInvalidSelect: B[14] || (B[14] = (Z) => v.$emit("invalid-select"))
              }), Ye({ _: 2 }, [
                De(u(le), (Z, ft) => ({
                  name: Z,
                  fn: ie((ue) => [
                    x(v.$slots, Z, Pe(Le({ ...ue })))
                  ])
                }))
              ]), 1040, ["menu-mount", "calendar-width", "internal-model-value"])) : $("", !0)
            ], 42, Xr)
          ];
        }),
        _: 3
      }, 8, ["name", "css"]);
    };
  }
}), al = typeof window < "u" ? window : void 0, ln = () => {
}, rl = (e) => Qn() ? (ea(e), !0) : !1, ll = (e, n, a, t) => {
  if (!e)
    return ln;
  let s = ln;
  const c = tt(
    () => u(e),
    (P) => {
      s(), P && (P.addEventListener(n, a, t), s = () => {
        P.removeEventListener(n, a, t), s = ln;
      });
    },
    { immediate: !0, flush: "post" }
  ), h = () => {
    c(), s();
  };
  return rl(h), h;
}, ol = (e, n, a, t = {}) => {
  const { window: s = al, event: c = "pointerdown" } = t;
  return s ? ll(s, c, (P) => {
    const Y = $e(e), D = $e(n);
    !Y || !D || Y === P.target || P.composedPath().includes(Y) || P.composedPath().includes(D) || a(P);
  }, { passive: !0 }) : void 0;
}, sl = /* @__PURE__ */ We({
  __name: "VueDatePicker",
  props: {
    ...at
  },
  emits: [
    "update:model-value",
    "text-submit",
    "closed",
    "cleared",
    "open",
    "focus",
    "blur",
    "internal-model-change",
    "recalculate-position",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, s = cn(), c = W(!1), h = Mt(t, "modelValue"), P = Mt(t, "timezone"), Y = W(null), D = W(null), L = W(!1), M = W(null), { setMenuFocused: m, setShiftKey: T } = xn(), { clearArrowNav: Q } = nt(), { validateDate: X, isValidTime: z, defaults: O } = Ve(t);
    He(() => {
      f(t.modelValue), t.inline || (S(M.value).addEventListener("scroll", o), window.addEventListener("resize", r)), t.inline && (c.value = !0);
    }), dn(() => {
      if (!t.inline) {
        const ae = S(M.value);
        ae && ae.removeEventListener("scroll", o), window.removeEventListener("resize", r);
      }
    });
    const I = it(s, "all", t.presetRanges), V = it(s, "input");
    tt(
      [h, P],
      () => {
        f(h.value);
      },
      { deep: !0 }
    );
    const { openOnTop: J, menuPosition: G, setMenuPosition: te, setInitialPosition: se, getScrollableParent: S } = nr(
      Y,
      D,
      a,
      t
    ), {
      inputValue: E,
      internalModelValue: U,
      parseExternalModelValue: f,
      emitModelValue: _,
      formatInputValue: K,
      checkBeforeEmit: oe
    } = er(a, t, L), ee = F(
      () => ({
        dp__main: !0,
        dp__theme_dark: t.dark,
        dp__theme_light: !t.dark,
        dp__flex_display: t.inline,
        dp__flex_display_with_input: t.inlineWithInput
      })
    ), N = F(() => t.dark ? "dp__theme_dark" : "dp__theme_light"), l = F(() => t.teleport ? {
      to: typeof t.teleport == "boolean" ? "body" : t.teleport,
      disabled: t.inline
    } : { class: "dp__outer_menu_wrap" }), o = () => {
      c.value && (t.closeOnScroll ? ne() : te());
    }, r = () => {
      c.value && te();
    }, d = () => {
      !t.disabled && !t.readonly && (se(), c.value = !0, dt().then(() => {
        te(), c.value && a("open");
      }), c.value || j(), f(t.modelValue));
    }, A = () => {
      E.value = "", j(), a("update:model-value", null), a("cleared"), ne();
    }, H = () => {
      const ae = U.value;
      return !ae || !Array.isArray(ae) && X(ae) ? !0 : Array.isArray(ae) ? ae.length === 2 && X(ae[0]) && X(ae[1]) ? !0 : X(ae[0]) : !1;
    }, R = () => {
      oe() && H() ? (_(), ne()) : a("invalid-select", U.value);
    }, g = (ae) => {
      k(), _(), t.closeOnAutoApply && !ae && ne();
    }, k = () => {
      D.value && t.textInput && D.value.setParsedDate(U.value);
    }, y = (ae = !1) => {
      t.autoApply && z(U.value) && H() && (t.range && Array.isArray(U.value) ? (t.partialRange || U.value.length === 2) && g(ae) : g(ae));
    }, j = () => {
      t.textInput || (U.value = null);
    }, ne = () => {
      t.inline || (c.value && (c.value = !1, m(!1), T(!1), Q(), a("closed"), se(), E.value && f(h.value)), j());
    }, Ne = (ae, ge) => {
      if (!ae) {
        U.value = null;
        return;
      }
      U.value = ae, ge && (R(), a("text-submit"));
    }, Xe = () => {
      t.autoApply && z(U.value) && _(), k();
    }, le = () => c.value ? ne() : d(), qe = (ae) => {
      U.value = ae;
    }, ze = F(() => t.textInput && O.value.textInputOptions.format), Re = () => {
      ze.value && (L.value = !0, K()), a("focus");
    }, rt = () => {
      ze.value && (L.value = !1, K()), a("blur");
    }, ht = (ae) => {
      Y.value && Y.value.updateMonthYear(0, {
        month: Nn(ae.month),
        year: Nn(ae.year)
      });
    };
    return ol(
      Y,
      D,
      t.onClickOutside ? () => t.onClickOutside(H) : ne
    ), n({
      closeMenu: ne,
      selectDate: R,
      clearValue: A,
      openMenu: d,
      onScroll: o,
      formatInputValue: K,
      // exposed for testing purposes
      updateInternalModelValue: qe,
      // modify internal modelValue
      setMonthYear: ht
    }), (ae, ge) => (p(), C("div", {
      class: ye(u(ee)),
      ref_key: "pickerWrapperRef",
      ref: M
    }, [
      et(dr, Te({
        ref_key: "inputRef",
        ref: D,
        "is-menu-open": c.value,
        "input-value": u(E),
        "onUpdate:inputValue": ge[0] || (ge[0] = (ve) => ot(E) ? E.value = ve : null)
      }, ae.$props, {
        onClear: A,
        onOpen: d,
        onSetInputDate: Ne,
        onSetEmptyDate: u(_),
        onSelectDate: R,
        onToggle: le,
        onClose: ne,
        onFocus: Re,
        onBlur: rt
      }), Ye({ _: 2 }, [
        De(u(V), (ve, Fe) => ({
          name: ve,
          fn: ie((Je) => [
            x(ae.$slots, ve, Pe(Le(Je)))
          ])
        }))
      ]), 1040, ["is-menu-open", "input-value", "onSetEmptyDate"]),
      c.value ? (p(), fe(Yn(ae.teleport ? ta : "div"), Pe(Te({ key: 0 }, u(l))), {
        default: ie(() => [
          c.value ? (p(), fe(nl, Te({
            key: 0,
            ref_key: "dpMenuRef",
            ref: Y,
            class: u(N),
            style: u(G),
            "open-on-top": u(J)
          }, ae.$props, {
            "internal-model-value": u(U),
            "onUpdate:internalModelValue": ge[1] || (ge[1] = (ve) => ot(U) ? U.value = ve : null),
            onClosePicker: ne,
            onSelectDate: R,
            onAutoApply: y,
            onTimeUpdate: Xe,
            onFlowStep: ge[2] || (ge[2] = (ve) => ae.$emit("flow-step", ve)),
            onUpdateMonthYear: ge[3] || (ge[3] = (ve) => ae.$emit("update-month-year", ve)),
            onInvalidSelect: ge[4] || (ge[4] = (ve) => ae.$emit("invalid-select", u(U))),
            onInvalidFixedRange: ge[5] || (ge[5] = (ve) => ae.$emit("invalid-fixed-range", ve)),
            onRecalculatePosition: u(te),
            onTooltipOpen: ge[6] || (ge[6] = (ve) => ae.$emit("tooltip-open", ve)),
            onTooltipClose: ge[7] || (ge[7] = (ve) => ae.$emit("tooltip-close", ve)),
            onTimePickerOpen: ge[8] || (ge[8] = (ve) => ae.$emit("time-picker-open", ve))
          }), Ye({ _: 2 }, [
            De(u(I), (ve, Fe) => ({
              name: ve,
              fn: ie((Je) => [
                x(ae.$slots, ve, Pe(Le({ ...Je })))
              ])
            }))
          ]), 1040, ["class", "style", "open-on-top", "internal-model-value", "onRecalculatePosition"])) : $("", !0)
        ]),
        _: 3
      }, 16)) : $("", !0)
    ], 2));
  }
}), Xn = /* @__PURE__ */ (() => {
  const e = sl;
  return e.install = (n) => {
    n.component("Vue3DatePicker", e);
  }, e;
})(), il = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Xn
}, Symbol.toStringTag, { value: "Module" }));
Object.entries(il).forEach(([e, n]) => {
  e !== "default" && (Xn[e] = n);
});
export {
  Xn as default
};
